#pragma once

#include <stdbool.h>

typedef unsigned char undefined;

typedef unsigned char byte;
typedef unsigned int dword;
typedef long long longlong;
typedef unsigned long long qword;
typedef unsigned char uchar;
typedef unsigned int uint;
typedef unsigned long ulong;
typedef unsigned long long ulonglong;
typedef unsigned char undefined1;
typedef unsigned short undefined2;
typedef unsigned int undefined4;
typedef unsigned long long undefined8;
typedef unsigned short ushort;
typedef unsigned short word;
typedef struct gs_lv_transcode gs_lv_transcode;

typedef struct ion_info ion_info;

typedef struct ion_info ion_info_t;

typedef struct duss_osal_mutex_handle_t duss_osal_mutex_handle_t;

typedef enum record_state
{
    RECORD_STATE_IDLE = 0,
    RECORD_STATE_RECORDING = 1,
    RECORD_STATE_STOP_ERROR = 2,
    RECORD_STATE_STOP_FULL = 3,
    RECORD_STATE_STOP_WRITE_SLOW = 4,
    RECORD_STATE_STARTING = 5,
    RECORD_STATE_STOPPING = 6
} record_state;

typedef enum record_state record_state_t;

typedef struct duss_osal_task_handle_t duss_osal_task_handle_t;

typedef uchar __uint8_t;

typedef __uint8_t uint8_t;

typedef struct __gs_local_sd_info __gs_local_sd_info;

typedef struct __gs_local_sd_info gs_local_sd_info_t;

typedef struct gs_sd_listener gs_sd_listener;

typedef enum sd_event
{
    SD_EVENT_NONE = 0,
    SD_EVENT_SPACE_LOW = 1,
    SD_EVENT_SD_INSERT = 2,
    SD_EVENT_SD_REMOVE = 3
} sd_event;

typedef enum sd_event sd_event_t;

typedef struct gs_sd_listener gs_sd_listener_t;

typedef struct gs_usb_listener gs_usb_listener;

typedef enum usb_event
{
    USB_EVENT_NONE = 0,
    USB_EVENT_GADGET_CONNECTED = 1
} usb_event;

typedef enum usb_event usb_event_t;

typedef struct gs_usb_listener gs_usb_listener_t;

typedef struct gs_media_cmd_chnl gs_media_cmd_chnl;

typedef struct gs_media_cmd_chnl gs_media_cmd_chnl_t;

typedef struct AVCodecContext AVCodecContext;

typedef struct AVFrame AVFrame;

typedef enum AVPixelFormat
{
    AV_PIX_FMT_NONE = -1,
    PIX_FMT_NONE = -1,
    AV_PIX_FMT_YUV420P = 0,
    PIX_FMT_YUV420P = 0,
    AV_PIX_FMT_YUYV422 = 1,
    PIX_FMT_YUYV422 = 1,
    AV_PIX_FMT_RGB24 = 2,
    PIX_FMT_RGB24 = 2,
    AV_PIX_FMT_BGR24 = 3,
    PIX_FMT_BGR24 = 3,
    AV_PIX_FMT_YUV422P = 4,
    PIX_FMT_YUV422P = 4,
    AV_PIX_FMT_YUV444P = 5,
    PIX_FMT_YUV444P = 5,
    AV_PIX_FMT_YUV410P = 6,
    PIX_FMT_YUV410P = 6,
    AV_PIX_FMT_YUV411P = 7,
    PIX_FMT_YUV411P = 7,
    AV_PIX_FMT_GRAY8 = 8,
    PIX_FMT_GRAY8 = 8,
    AV_PIX_FMT_MONOWHITE = 9,
    PIX_FMT_MONOWHITE = 9,
    AV_PIX_FMT_MONOBLACK = 10,
    PIX_FMT_MONOBLACK = 10,
    AV_PIX_FMT_PAL8 = 11,
    PIX_FMT_PAL8 = 11,
    AV_PIX_FMT_YUVJ420P = 12,
    PIX_FMT_YUVJ420P = 12,
    AV_PIX_FMT_YUVJ422P = 13,
    PIX_FMT_YUVJ422P = 13,
    AV_PIX_FMT_YUVJ444P = 14,
    PIX_FMT_YUVJ444P = 14,
    AV_PIX_FMT_XVMC_MPEG2_MC = 15,
    PIX_FMT_XVMC_MPEG2_MC = 15,
    AV_PIX_FMT_XVMC_MPEG2_IDCT = 16,
    PIX_FMT_XVMC_MPEG2_IDCT = 16,
    AV_PIX_FMT_UYVY422 = 17,
    PIX_FMT_UYVY422 = 17,
    AV_PIX_FMT_UYYVYY411 = 18,
    PIX_FMT_UYYVYY411 = 18,
    AV_PIX_FMT_BGR8 = 19,
    PIX_FMT_BGR8 = 19,
    AV_PIX_FMT_BGR4 = 20,
    PIX_FMT_BGR4 = 20,
    AV_PIX_FMT_BGR4_BYTE = 21,
    PIX_FMT_BGR4_BYTE = 21,
    AV_PIX_FMT_RGB8 = 22,
    PIX_FMT_RGB8 = 22,
    AV_PIX_FMT_RGB4 = 23,
    PIX_FMT_RGB4 = 23,
    AV_PIX_FMT_RGB4_BYTE = 24,
    PIX_FMT_RGB4_BYTE = 24,
    AV_PIX_FMT_NV12 = 25,
    PIX_FMT_NV12 = 25,
    AV_PIX_FMT_NV21 = 26,
    PIX_FMT_NV21 = 26,
    AV_PIX_FMT_ARGB = 27,
    PIX_FMT_ARGB = 27,
    AV_PIX_FMT_RGBA = 28,
    PIX_FMT_RGBA = 28,
    AV_PIX_FMT_ABGR = 29,
    PIX_FMT_ABGR = 29,
    AV_PIX_FMT_BGRA = 30,
    PIX_FMT_BGRA = 30,
    AV_PIX_FMT_GRAY16BE = 31,
    PIX_FMT_GRAY16BE = 31,
    AV_PIX_FMT_GRAY16LE = 32,
    PIX_FMT_GRAY16LE = 32,
    AV_PIX_FMT_YUV440P = 33,
    PIX_FMT_YUV440P = 33,
    AV_PIX_FMT_YUVJ440P = 34,
    PIX_FMT_YUVJ440P = 34,
    AV_PIX_FMT_YUVA420P = 35,
    PIX_FMT_YUVA420P = 35,
    AV_PIX_FMT_VDPAU_H264 = 36,
    PIX_FMT_VDPAU_H264 = 36,
    AV_PIX_FMT_VDPAU_MPEG1 = 37,
    PIX_FMT_VDPAU_MPEG1 = 37,
    AV_PIX_FMT_VDPAU_MPEG2 = 38,
    PIX_FMT_VDPAU_MPEG2 = 38,
    AV_PIX_FMT_VDPAU_WMV3 = 39,
    PIX_FMT_VDPAU_WMV3 = 39,
    AV_PIX_FMT_VDPAU_VC1 = 40,
    PIX_FMT_VDPAU_VC1 = 40,
    AV_PIX_FMT_RGB48BE = 41,
    PIX_FMT_RGB48BE = 41,
    AV_PIX_FMT_RGB48LE = 42,
    PIX_FMT_RGB48LE = 42,
    AV_PIX_FMT_RGB565BE = 43,
    PIX_FMT_RGB565BE = 43,
    AV_PIX_FMT_RGB565LE = 44,
    PIX_FMT_RGB565LE = 44,
    AV_PIX_FMT_RGB555BE = 45,
    PIX_FMT_RGB555BE = 45,
    AV_PIX_FMT_RGB555LE = 46,
    PIX_FMT_RGB555LE = 46,
    AV_PIX_FMT_BGR565BE = 47,
    PIX_FMT_BGR565BE = 47,
    AV_PIX_FMT_BGR565LE = 48,
    PIX_FMT_BGR565LE = 48,
    AV_PIX_FMT_BGR555BE = 49,
    PIX_FMT_BGR555BE = 49,
    AV_PIX_FMT_BGR555LE = 50,
    PIX_FMT_BGR555LE = 50,
    AV_PIX_FMT_VAAPI_MOCO = 51,
    PIX_FMT_VAAPI_MOCO = 51,
    AV_PIX_FMT_VAAPI_IDCT = 52,
    PIX_FMT_VAAPI_IDCT = 52,
    AV_PIX_FMT_VAAPI_VLD = 53,
    PIX_FMT_VAAPI_VLD = 53,
    AV_PIX_FMT_YUV420P16LE = 54,
    PIX_FMT_YUV420P16LE = 54,
    AV_PIX_FMT_YUV420P16BE = 55,
    PIX_FMT_YUV420P16BE = 55,
    AV_PIX_FMT_YUV422P16LE = 56,
    PIX_FMT_YUV422P16LE = 56,
    AV_PIX_FMT_YUV422P16BE = 57,
    PIX_FMT_YUV422P16BE = 57,
    AV_PIX_FMT_YUV444P16LE = 58,
    PIX_FMT_YUV444P16LE = 58,
    AV_PIX_FMT_YUV444P16BE = 59,
    PIX_FMT_YUV444P16BE = 59,
    AV_PIX_FMT_VDPAU_MPEG4 = 60,
    PIX_FMT_VDPAU_MPEG4 = 60,
    AV_PIX_FMT_DXVA2_VLD = 61,
    PIX_FMT_DXVA2_VLD = 61,
    AV_PIX_FMT_RGB444LE = 62,
    PIX_FMT_RGB444LE = 62,
    AV_PIX_FMT_RGB444BE = 63,
    PIX_FMT_RGB444BE = 63,
    AV_PIX_FMT_BGR444LE = 64,
    PIX_FMT_BGR444LE = 64,
    AV_PIX_FMT_BGR444BE = 65,
    PIX_FMT_BGR444BE = 65,
    AV_PIX_FMT_GRAY8A = 66,
    AV_PIX_FMT_Y400A = 66,
    AV_PIX_FMT_YA8 = 66,
    PIX_FMT_GRAY8A = 66,
    AV_PIX_FMT_BGR48BE = 67,
    PIX_FMT_BGR48BE = 67,
    AV_PIX_FMT_BGR48LE = 68,
    PIX_FMT_BGR48LE = 68,
    AV_PIX_FMT_YUV420P9BE = 69,
    PIX_FMT_YUV420P9BE = 69,
    AV_PIX_FMT_YUV420P9LE = 70,
    PIX_FMT_YUV420P9LE = 70,
    AV_PIX_FMT_YUV420P10BE = 71,
    PIX_FMT_YUV420P10BE = 71,
    AV_PIX_FMT_YUV420P10LE = 72,
    PIX_FMT_YUV420P10LE = 72,
    AV_PIX_FMT_YUV422P10BE = 73,
    PIX_FMT_YUV422P10BE = 73,
    AV_PIX_FMT_YUV422P10LE = 74,
    PIX_FMT_YUV422P10LE = 74,
    AV_PIX_FMT_YUV444P9BE = 75,
    PIX_FMT_YUV444P9BE = 75,
    AV_PIX_FMT_YUV444P9LE = 76,
    PIX_FMT_YUV444P9LE = 76,
    AV_PIX_FMT_YUV444P10BE = 77,
    PIX_FMT_YUV444P10BE = 77,
    AV_PIX_FMT_YUV444P10LE = 78,
    PIX_FMT_YUV444P10LE = 78,
    AV_PIX_FMT_YUV422P9BE = 79,
    PIX_FMT_YUV422P9BE = 79,
    AV_PIX_FMT_YUV422P9LE = 80,
    PIX_FMT_YUV422P9LE = 80,
    AV_PIX_FMT_VDA_VLD = 81,
    PIX_FMT_VDA_VLD = 81,
    AV_PIX_FMT_GBRP = 82,
    PIX_FMT_GBRP = 82,
    AV_PIX_FMT_GBRP9BE = 83,
    PIX_FMT_GBRP9BE = 83,
    AV_PIX_FMT_GBRP9LE = 84,
    PIX_FMT_GBRP9LE = 84,
    AV_PIX_FMT_GBRP10BE = 85,
    PIX_FMT_GBRP10BE = 85,
    AV_PIX_FMT_GBRP10LE = 86,
    PIX_FMT_GBRP10LE = 86,
    AV_PIX_FMT_GBRP16BE = 87,
    PIX_FMT_GBRP16BE = 87,
    AV_PIX_FMT_GBRP16LE = 88,
    PIX_FMT_GBRP16LE = 88,
    AV_PIX_FMT_YUVA422P_LIBAV = 89,
    AV_PIX_FMT_YUVA444P_LIBAV = 90,
    AV_PIX_FMT_YUVA420P9BE = 91,
    AV_PIX_FMT_YUVA420P9LE = 92,
    AV_PIX_FMT_YUVA422P9BE = 93,
    AV_PIX_FMT_YUVA422P9LE = 94,
    AV_PIX_FMT_YUVA444P9BE = 95,
    AV_PIX_FMT_YUVA444P9LE = 96,
    AV_PIX_FMT_YUVA420P10BE = 97,
    AV_PIX_FMT_YUVA420P10LE = 98,
    AV_PIX_FMT_YUVA422P10BE = 99,
    AV_PIX_FMT_YUVA422P10LE = 100,
    AV_PIX_FMT_YUVA444P10BE = 101,
    AV_PIX_FMT_YUVA444P10LE = 102,
    AV_PIX_FMT_YUVA420P16BE = 103,
    AV_PIX_FMT_YUVA420P16LE = 104,
    AV_PIX_FMT_YUVA422P16BE = 105,
    AV_PIX_FMT_YUVA422P16LE = 106,
    AV_PIX_FMT_YUVA444P16BE = 107,
    AV_PIX_FMT_YUVA444P16LE = 108,
    AV_PIX_FMT_VDPAU = 109,
    AV_PIX_FMT_XYZ12LE = 110,
    AV_PIX_FMT_XYZ12BE = 111,
    AV_PIX_FMT_NV16 = 112,
    AV_PIX_FMT_NV20LE = 113,
    AV_PIX_FMT_NV20BE = 114,
    AV_PIX_FMT_RGBA64BE_LIBAV = 115,
    AV_PIX_FMT_RGBA64LE_LIBAV = 116,
    AV_PIX_FMT_BGRA64BE_LIBAV = 117,
    AV_PIX_FMT_BGRA64LE_LIBAV = 118,
    AV_PIX_FMT_YVYU422 = 119,
    AV_PIX_FMT_VDA = 120,
    AV_PIX_FMT_YA16BE = 121,
    AV_PIX_FMT_YA16LE = 122,
    AV_PIX_FMT_RGBA64BE = 291,
    PIX_FMT_RGBA64BE = 291,
    AV_PIX_FMT_RGBA64LE = 292,
    PIX_FMT_RGBA64LE = 292,
    AV_PIX_FMT_BGRA64BE = 293,
    PIX_FMT_BGRA64BE = 293,
    AV_PIX_FMT_BGRA64LE = 294,
    PIX_FMT_BGRA64LE = 294,
    AV_PIX_FMT_0RGB = 295,
    PIX_FMT_0RGB = 295,
    AV_PIX_FMT_RGB0 = 296,
    PIX_FMT_RGB0 = 296,
    AV_PIX_FMT_0BGR = 297,
    PIX_FMT_0BGR = 297,
    AV_PIX_FMT_BGR0 = 298,
    PIX_FMT_BGR0 = 298,
    AV_PIX_FMT_YUVA444P = 299,
    PIX_FMT_YUVA444P = 299,
    AV_PIX_FMT_YUVA422P = 300,
    PIX_FMT_YUVA422P = 300,
    AV_PIX_FMT_YUV420P12BE = 301,
    PIX_FMT_YUV420P12BE = 301,
    AV_PIX_FMT_YUV420P12LE = 302,
    PIX_FMT_YUV420P12LE = 302,
    AV_PIX_FMT_YUV420P14BE = 303,
    PIX_FMT_YUV420P14BE = 303,
    AV_PIX_FMT_YUV420P14LE = 304,
    PIX_FMT_YUV420P14LE = 304,
    AV_PIX_FMT_YUV422P12BE = 305,
    PIX_FMT_YUV422P12BE = 305,
    AV_PIX_FMT_YUV422P12LE = 306,
    PIX_FMT_YUV422P12LE = 306,
    AV_PIX_FMT_YUV422P14BE = 307,
    PIX_FMT_YUV422P14BE = 307,
    AV_PIX_FMT_YUV422P14LE = 308,
    PIX_FMT_YUV422P14LE = 308,
    AV_PIX_FMT_YUV444P12BE = 309,
    PIX_FMT_YUV444P12BE = 309,
    AV_PIX_FMT_YUV444P12LE = 310,
    PIX_FMT_YUV444P12LE = 310,
    AV_PIX_FMT_YUV444P14BE = 311,
    PIX_FMT_YUV444P14BE = 311,
    AV_PIX_FMT_YUV444P14LE = 312,
    PIX_FMT_YUV444P14LE = 312,
    AV_PIX_FMT_GBRP12BE = 313,
    PIX_FMT_GBRP12BE = 313,
    AV_PIX_FMT_GBRP12LE = 314,
    PIX_FMT_GBRP12LE = 314,
    AV_PIX_FMT_GBRP14BE = 315,
    PIX_FMT_GBRP14BE = 315,
    AV_PIX_FMT_GBRP14LE = 316,
    PIX_FMT_GBRP14LE = 316,
    AV_PIX_FMT_GBRAP = 317,
    PIX_FMT_NB = 317,
    AV_PIX_FMT_GBRAP16BE = 318,
    AV_PIX_FMT_GBRAP16LE = 319,
    AV_PIX_FMT_YUVJ411P = 320,
    AV_PIX_FMT_BAYER_BGGR8 = 321,
    AV_PIX_FMT_BAYER_RGGB8 = 322,
    AV_PIX_FMT_BAYER_GBRG8 = 323,
    AV_PIX_FMT_BAYER_GRBG8 = 324,
    AV_PIX_FMT_BAYER_BGGR16LE = 325,
    AV_PIX_FMT_BAYER_BGGR16BE = 326,
    AV_PIX_FMT_BAYER_RGGB16LE = 327,
    AV_PIX_FMT_BAYER_RGGB16BE = 328,
    AV_PIX_FMT_BAYER_GBRG16LE = 329,
    AV_PIX_FMT_BAYER_GBRG16BE = 330,
    AV_PIX_FMT_BAYER_GRBG16LE = 331,
    AV_PIX_FMT_BAYER_GRBG16BE = 332,
    AV_PIX_FMT_NB = 333
} AVPixelFormat;

typedef struct pl_muxer_t pl_muxer_t;

typedef struct pl_muxer_t *p1_muxer_handle_t;

typedef enum record_mode
{
    RECORD_MODE_MANNUAL = 0,
    RECORD_MODE_LOOPING = 1
} record_mode;

typedef enum record_mode record_mode_t;

typedef longlong __int64_t;

typedef __int64_t int64_t;

typedef uint __uint32_t;

typedef __uint32_t uint32_t;

typedef struct duss_list_head duss_list_head;

typedef struct __sFILE __sFILE;

typedef long __kernel_long_t;

typedef __kernel_long_t __kernel_off_t;

typedef __kernel_off_t off_t;

typedef off_t fpos_t;

typedef struct __sFILE FILE;

typedef struct duss_hal_obj duss_hal_obj;

typedef struct duss_hal_obj *duss_hal_obj_handle_t;

typedef struct duss_hal_mem_config_t duss_hal_mem_config_t;

typedef struct duss_hal_mem_param_t duss_hal_mem_param_t;

typedef struct duss_hal_mem_buf duss_hal_mem_buf;

typedef struct duss_hal_mem_buf *duss_hal_mem_handle_t;

typedef struct duss_osal_mutex_attrib_t duss_osal_mutex_attrib_t;

typedef struct sem_t sem_t;

typedef struct duss_osal_task_attrib_t duss_osal_task_attrib_t;

typedef long pthread_t;

typedef struct duss_storage_client duss_storage_client;

typedef struct duss_storage_client duss_storage_client_t;

typedef enum sd_file_type
{
    SD_FILE_TYPE_UNKNOWN = 0,
    SD_FILE_TYPE_FAT32 = 1,
    SD_FILE_TYPE_EXFAT = 2,
    SD_FILE_TYPE_MAX = 3
} sd_file_type;

typedef enum sd_file_type sd_file_type_t;

typedef struct gs_storage_listener gs_storage_listener;

typedef enum storage_event
{
    STORAGE_EVENT_NONE = 0,
    STORAGE_EVENT_SPACE_LOW = 1
} storage_event;

typedef enum storage_event storage_event_t;

typedef struct gs_storage_listener gs_storage_listener_t;

typedef struct gs_meta_listener gs_meta_listener;

typedef enum meta_event
{
    META_EVENT_NONE = 0,
    META_EVENT_SD_INSERT = 1,
    META_EVENT_SD_REMOVE = 2,
    META_EVENT_SD_FORMAT = 3
} meta_event;

typedef enum meta_event meta_event_t;

typedef struct gs_meta_listener gs_meta_listener_t;

typedef struct gs_playback_listener gs_playback_listener;

typedef enum playback_event
{
    PB_EVENT_NONE = 0,
    PB_EVENT_SD_INSERT = 1,
    PB_EVENT_SD_REMOVE = 2,
    PB_EVENT_SD_FORMAT = 3
} playback_event;

typedef enum playback_event playback_event_t;

typedef struct gs_playback_listener gs_playback_listener_t;

typedef struct AVClass AVClass;

typedef enum AVClassCategory
{
    AV_CLASS_CATEGORY_NA = 0,
    AV_CLASS_CATEGORY_INPUT = 1,
    AV_CLASS_CATEGORY_OUTPUT = 2,
    AV_CLASS_CATEGORY_MUXER = 3,
    AV_CLASS_CATEGORY_DEMUXER = 4,
    AV_CLASS_CATEGORY_ENCODER = 5,
    AV_CLASS_CATEGORY_DECODER = 6,
    AV_CLASS_CATEGORY_FILTER = 7,
    AV_CLASS_CATEGORY_BITSTREAM_FILTER = 8,
    AV_CLASS_CATEGORY_SWSCALER = 9,
    AV_CLASS_CATEGORY_SWRESAMPLER = 10,
    AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40,
    AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT = 41,
    AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT = 42,
    AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT = 43,
    AV_CLASS_CATEGORY_DEVICE_OUTPUT = 44,
    AV_CLASS_CATEGORY_DEVICE_INPUT = 45,
    AV_CLASS_CATEGORY_NB = 46
} AVClassCategory;

typedef struct AVOptionRanges AVOptionRanges;

typedef enum AVMediaType
{
    AVMEDIA_TYPE_UNKNOWN = -1,
    AVMEDIA_TYPE_VIDEO = 0,
    AVMEDIA_TYPE_AUDIO = 1,
    AVMEDIA_TYPE_DATA = 2,
    AVMEDIA_TYPE_SUBTITLE = 3,
    AVMEDIA_TYPE_ATTACHMENT = 4,
    AVMEDIA_TYPE_NB = 5
} AVMediaType;

typedef struct AVCodec AVCodec;

typedef struct AVSubtitle AVSubtitle;

typedef struct AVPacket AVPacket;

typedef enum AVCodecID
{
    AV_CODEC_ID_NONE = 0,
    CODEC_ID_NONE = 0,
    AV_CODEC_ID_MPEG1VIDEO = 1,
    CODEC_ID_MPEG1VIDEO = 1,
    AV_CODEC_ID_MPEG2VIDEO = 2,
    CODEC_ID_MPEG2VIDEO = 2,
    AV_CODEC_ID_MPEG2VIDEO_XVMC = 3,
    CODEC_ID_MPEG2VIDEO_XVMC = 3,
    AV_CODEC_ID_H261 = 4,
    CODEC_ID_H261 = 4,
    AV_CODEC_ID_H263 = 5,
    CODEC_ID_H263 = 5,
    AV_CODEC_ID_RV10 = 6,
    CODEC_ID_RV10 = 6,
    AV_CODEC_ID_RV20 = 7,
    CODEC_ID_RV20 = 7,
    AV_CODEC_ID_MJPEG = 8,
    CODEC_ID_MJPEG = 8,
    AV_CODEC_ID_MJPEGB = 9,
    CODEC_ID_MJPEGB = 9,
    AV_CODEC_ID_LJPEG = 10,
    CODEC_ID_LJPEG = 10,
    AV_CODEC_ID_SP5X = 11,
    CODEC_ID_SP5X = 11,
    AV_CODEC_ID_JPEGLS = 12,
    CODEC_ID_JPEGLS = 12,
    AV_CODEC_ID_MPEG4 = 13,
    CODEC_ID_MPEG4 = 13,
    AV_CODEC_ID_RAWVIDEO = 14,
    CODEC_ID_RAWVIDEO = 14,
    AV_CODEC_ID_MSMPEG4V1 = 15,
    CODEC_ID_MSMPEG4V1 = 15,
    AV_CODEC_ID_MSMPEG4V2 = 16,
    CODEC_ID_MSMPEG4V2 = 16,
    AV_CODEC_ID_MSMPEG4V3 = 17,
    CODEC_ID_MSMPEG4V3 = 17,
    AV_CODEC_ID_WMV1 = 18,
    CODEC_ID_WMV1 = 18,
    AV_CODEC_ID_WMV2 = 19,
    CODEC_ID_WMV2 = 19,
    AV_CODEC_ID_H263P = 20,
    CODEC_ID_H263P = 20,
    AV_CODEC_ID_H263I = 21,
    CODEC_ID_H263I = 21,
    AV_CODEC_ID_FLV1 = 22,
    CODEC_ID_FLV1 = 22,
    AV_CODEC_ID_SVQ1 = 23,
    CODEC_ID_SVQ1 = 23,
    AV_CODEC_ID_SVQ3 = 24,
    CODEC_ID_SVQ3 = 24,
    AV_CODEC_ID_DVVIDEO = 25,
    CODEC_ID_DVVIDEO = 25,
    AV_CODEC_ID_HUFFYUV = 26,
    CODEC_ID_HUFFYUV = 26,
    AV_CODEC_ID_CYUV = 27,
    CODEC_ID_CYUV = 27,
    AV_CODEC_ID_H264 = 28,
    CODEC_ID_H264 = 28,
    AV_CODEC_ID_INDEO3 = 29,
    CODEC_ID_INDEO3 = 29,
    AV_CODEC_ID_VP3 = 30,
    CODEC_ID_VP3 = 30,
    AV_CODEC_ID_THEORA = 31,
    CODEC_ID_THEORA = 31,
    AV_CODEC_ID_ASV1 = 32,
    CODEC_ID_ASV1 = 32,
    AV_CODEC_ID_ASV2 = 33,
    CODEC_ID_ASV2 = 33,
    AV_CODEC_ID_FFV1 = 34,
    CODEC_ID_FFV1 = 34,
    AV_CODEC_ID_4XM = 35,
    CODEC_ID_4XM = 35,
    AV_CODEC_ID_VCR1 = 36,
    CODEC_ID_VCR1 = 36,
    AV_CODEC_ID_CLJR = 37,
    CODEC_ID_CLJR = 37,
    AV_CODEC_ID_MDEC = 38,
    CODEC_ID_MDEC = 38,
    AV_CODEC_ID_ROQ = 39,
    CODEC_ID_ROQ = 39,
    AV_CODEC_ID_INTERPLAY_VIDEO = 40,
    CODEC_ID_INTERPLAY_VIDEO = 40,
    AV_CODEC_ID_XAN_WC3 = 41,
    CODEC_ID_XAN_WC3 = 41,
    AV_CODEC_ID_XAN_WC4 = 42,
    CODEC_ID_XAN_WC4 = 42,
    AV_CODEC_ID_RPZA = 43,
    CODEC_ID_RPZA = 43,
    AV_CODEC_ID_CINEPAK = 44,
    CODEC_ID_CINEPAK = 44,
    AV_CODEC_ID_WS_VQA = 45,
    CODEC_ID_WS_VQA = 45,
    AV_CODEC_ID_MSRLE = 46,
    CODEC_ID_MSRLE = 46,
    AV_CODEC_ID_MSVIDEO1 = 47,
    CODEC_ID_MSVIDEO1 = 47,
    AV_CODEC_ID_IDCIN = 48,
    CODEC_ID_IDCIN = 48,
    AV_CODEC_ID_8BPS = 49,
    CODEC_ID_8BPS = 49,
    AV_CODEC_ID_SMC = 50,
    CODEC_ID_SMC = 50,
    AV_CODEC_ID_FLIC = 51,
    CODEC_ID_FLIC = 51,
    AV_CODEC_ID_TRUEMOTION1 = 52,
    CODEC_ID_TRUEMOTION1 = 52,
    AV_CODEC_ID_VMDVIDEO = 53,
    CODEC_ID_VMDVIDEO = 53,
    AV_CODEC_ID_MSZH = 54,
    CODEC_ID_MSZH = 54,
    AV_CODEC_ID_ZLIB = 55,
    CODEC_ID_ZLIB = 55,
    AV_CODEC_ID_QTRLE = 56,
    CODEC_ID_QTRLE = 56,
    AV_CODEC_ID_TSCC = 57,
    CODEC_ID_TSCC = 57,
    AV_CODEC_ID_ULTI = 58,
    CODEC_ID_ULTI = 58,
    AV_CODEC_ID_QDRAW = 59,
    CODEC_ID_QDRAW = 59,
    AV_CODEC_ID_VIXL = 60,
    CODEC_ID_VIXL = 60,
    AV_CODEC_ID_QPEG = 61,
    CODEC_ID_QPEG = 61,
    AV_CODEC_ID_PNG = 62,
    CODEC_ID_PNG = 62,
    AV_CODEC_ID_PPM = 63,
    CODEC_ID_PPM = 63,
    AV_CODEC_ID_PBM = 64,
    CODEC_ID_PBM = 64,
    AV_CODEC_ID_PGM = 65,
    CODEC_ID_PGM = 65,
    AV_CODEC_ID_PGMYUV = 66,
    CODEC_ID_PGMYUV = 66,
    AV_CODEC_ID_PAM = 67,
    CODEC_ID_PAM = 67,
    AV_CODEC_ID_FFVHUFF = 68,
    CODEC_ID_FFVHUFF = 68,
    AV_CODEC_ID_RV30 = 69,
    CODEC_ID_RV30 = 69,
    AV_CODEC_ID_RV40 = 70,
    CODEC_ID_RV40 = 70,
    AV_CODEC_ID_VC1 = 71,
    CODEC_ID_VC1 = 71,
    AV_CODEC_ID_WMV3 = 72,
    CODEC_ID_WMV3 = 72,
    AV_CODEC_ID_LOCO = 73,
    CODEC_ID_LOCO = 73,
    AV_CODEC_ID_WNV1 = 74,
    CODEC_ID_WNV1 = 74,
    AV_CODEC_ID_AASC = 75,
    CODEC_ID_AASC = 75,
    AV_CODEC_ID_INDEO2 = 76,
    CODEC_ID_INDEO2 = 76,
    AV_CODEC_ID_FRAPS = 77,
    CODEC_ID_FRAPS = 77,
    AV_CODEC_ID_TRUEMOTION2 = 78,
    CODEC_ID_TRUEMOTION2 = 78,
    AV_CODEC_ID_BMP = 79,
    CODEC_ID_BMP = 79,
    AV_CODEC_ID_CSCD = 80,
    CODEC_ID_CSCD = 80,
    AV_CODEC_ID_MMVIDEO = 81,
    CODEC_ID_MMVIDEO = 81,
    AV_CODEC_ID_ZMBV = 82,
    CODEC_ID_ZMBV = 82,
    AV_CODEC_ID_AVS = 83,
    CODEC_ID_AVS = 83,
    AV_CODEC_ID_SMACKVIDEO = 84,
    CODEC_ID_SMACKVIDEO = 84,
    AV_CODEC_ID_NUV = 85,
    CODEC_ID_NUV = 85,
    AV_CODEC_ID_KMVC = 86,
    CODEC_ID_KMVC = 86,
    AV_CODEC_ID_FLASHSV = 87,
    CODEC_ID_FLASHSV = 87,
    AV_CODEC_ID_CAVS = 88,
    CODEC_ID_CAVS = 88,
    AV_CODEC_ID_JPEG2000 = 89,
    CODEC_ID_JPEG2000 = 89,
    AV_CODEC_ID_VMNC = 90,
    CODEC_ID_VMNC = 90,
    AV_CODEC_ID_VP5 = 91,
    CODEC_ID_VP5 = 91,
    AV_CODEC_ID_VP6 = 92,
    CODEC_ID_VP6 = 92,
    AV_CODEC_ID_VP6F = 93,
    CODEC_ID_VP6F = 93,
    AV_CODEC_ID_TARGA = 94,
    CODEC_ID_TARGA = 94,
    AV_CODEC_ID_DSICINVIDEO = 95,
    CODEC_ID_DSICINVIDEO = 95,
    AV_CODEC_ID_TIERTEXSEQVIDEO = 96,
    CODEC_ID_TIERTEXSEQVIDEO = 96,
    AV_CODEC_ID_TIFF = 97,
    CODEC_ID_TIFF = 97,
    AV_CODEC_ID_GIF = 98,
    CODEC_ID_GIF = 98,
    AV_CODEC_ID_DXA = 99,
    CODEC_ID_DXA = 99,
    AV_CODEC_ID_DNXHD = 100,
    CODEC_ID_DNXHD = 100,
    AV_CODEC_ID_THP = 101,
    CODEC_ID_THP = 101,
    AV_CODEC_ID_SGI = 102,
    CODEC_ID_SGI = 102,
    AV_CODEC_ID_C93 = 103,
    CODEC_ID_C93 = 103,
    AV_CODEC_ID_BETHSOFTVID = 104,
    CODEC_ID_BETHSOFTVID = 104,
    AV_CODEC_ID_PTX = 105,
    CODEC_ID_PTX = 105,
    AV_CODEC_ID_TXD = 106,
    CODEC_ID_TXD = 106,
    AV_CODEC_ID_VP6A = 107,
    CODEC_ID_VP6A = 107,
    AV_CODEC_ID_AMV = 108,
    CODEC_ID_AMV = 108,
    AV_CODEC_ID_VB = 109,
    CODEC_ID_VB = 109,
    AV_CODEC_ID_PCX = 110,
    CODEC_ID_PCX = 110,
    AV_CODEC_ID_SUNRAST = 111,
    CODEC_ID_SUNRAST = 111,
    AV_CODEC_ID_INDEO4 = 112,
    CODEC_ID_INDEO4 = 112,
    AV_CODEC_ID_INDEO5 = 113,
    CODEC_ID_INDEO5 = 113,
    AV_CODEC_ID_MIMIC = 114,
    CODEC_ID_MIMIC = 114,
    AV_CODEC_ID_RL2 = 115,
    CODEC_ID_RL2 = 115,
    AV_CODEC_ID_ESCAPE124 = 116,
    CODEC_ID_ESCAPE124 = 116,
    AV_CODEC_ID_DIRAC = 117,
    CODEC_ID_DIRAC = 117,
    AV_CODEC_ID_BFI = 118,
    CODEC_ID_BFI = 118,
    AV_CODEC_ID_CMV = 119,
    CODEC_ID_CMV = 119,
    AV_CODEC_ID_MOTIONPIXELS = 120,
    CODEC_ID_MOTIONPIXELS = 120,
    AV_CODEC_ID_TGV = 121,
    CODEC_ID_TGV = 121,
    AV_CODEC_ID_TGQ = 122,
    CODEC_ID_TGQ = 122,
    AV_CODEC_ID_TQI = 123,
    CODEC_ID_TQI = 123,
    AV_CODEC_ID_AURA = 124,
    CODEC_ID_AURA = 124,
    AV_CODEC_ID_AURA2 = 125,
    CODEC_ID_AURA2 = 125,
    AV_CODEC_ID_V210X = 126,
    CODEC_ID_V210X = 126,
    AV_CODEC_ID_TMV = 127,
    CODEC_ID_TMV = 127,
    AV_CODEC_ID_V210 = 128,
    CODEC_ID_V210 = 128,
    AV_CODEC_ID_DPX = 129,
    CODEC_ID_DPX = 129,
    AV_CODEC_ID_MAD = 130,
    CODEC_ID_MAD = 130,
    AV_CODEC_ID_FRWU = 131,
    CODEC_ID_FRWU = 131,
    AV_CODEC_ID_FLASHSV2 = 132,
    CODEC_ID_FLASHSV2 = 132,
    AV_CODEC_ID_CDGRAPHICS = 133,
    CODEC_ID_CDGRAPHICS = 133,
    AV_CODEC_ID_R210 = 134,
    CODEC_ID_R210 = 134,
    AV_CODEC_ID_ANM = 135,
    CODEC_ID_ANM = 135,
    AV_CODEC_ID_BINKVIDEO = 136,
    CODEC_ID_BINKVIDEO = 136,
    AV_CODEC_ID_IFF_ILBM = 137,
    CODEC_ID_IFF_ILBM = 137,
    AV_CODEC_ID_IFF_BYTERUN1 = 138,
    CODEC_ID_IFF_BYTERUN1 = 138,
    AV_CODEC_ID_KGV1 = 139,
    CODEC_ID_KGV1 = 139,
    AV_CODEC_ID_YOP = 140,
    CODEC_ID_YOP = 140,
    AV_CODEC_ID_VP8 = 141,
    CODEC_ID_VP8 = 141,
    AV_CODEC_ID_PICTOR = 142,
    CODEC_ID_PICTOR = 142,
    AV_CODEC_ID_ANSI = 143,
    CODEC_ID_ANSI = 143,
    AV_CODEC_ID_A64_MULTI = 144,
    CODEC_ID_A64_MULTI = 144,
    AV_CODEC_ID_A64_MULTI5 = 145,
    CODEC_ID_A64_MULTI5 = 145,
    AV_CODEC_ID_R10K = 146,
    CODEC_ID_R10K = 146,
    AV_CODEC_ID_MXPEG = 147,
    CODEC_ID_MXPEG = 147,
    AV_CODEC_ID_LAGARITH = 148,
    CODEC_ID_LAGARITH = 148,
    AV_CODEC_ID_PRORES = 149,
    CODEC_ID_PRORES = 149,
    AV_CODEC_ID_JV = 150,
    CODEC_ID_JV = 150,
    AV_CODEC_ID_DFA = 151,
    CODEC_ID_DFA = 151,
    AV_CODEC_ID_WMV3IMAGE = 152,
    CODEC_ID_WMV3IMAGE = 152,
    AV_CODEC_ID_VC1IMAGE = 153,
    CODEC_ID_VC1IMAGE = 153,
    AV_CODEC_ID_UTVIDEO = 154,
    CODEC_ID_UTVIDEO = 154,
    AV_CODEC_ID_BMV_VIDEO = 155,
    CODEC_ID_BMV_VIDEO = 155,
    AV_CODEC_ID_VBLE = 156,
    CODEC_ID_VBLE = 156,
    AV_CODEC_ID_DXTORY = 157,
    CODEC_ID_DXTORY = 157,
    AV_CODEC_ID_V410 = 158,
    CODEC_ID_V410 = 158,
    AV_CODEC_ID_XWD = 159,
    CODEC_ID_XWD = 159,
    AV_CODEC_ID_CDXL = 160,
    CODEC_ID_CDXL = 160,
    AV_CODEC_ID_XBM = 161,
    CODEC_ID_XBM = 161,
    AV_CODEC_ID_ZEROCODEC = 162,
    CODEC_ID_ZEROCODEC = 162,
    AV_CODEC_ID_MSS1 = 163,
    CODEC_ID_MSS1 = 163,
    AV_CODEC_ID_MSA1 = 164,
    CODEC_ID_MSA1 = 164,
    AV_CODEC_ID_TSCC2 = 165,
    CODEC_ID_TSCC2 = 165,
    AV_CODEC_ID_MTS2 = 166,
    CODEC_ID_MTS2 = 166,
    AV_CODEC_ID_CLLC = 167,
    CODEC_ID_CLLC = 167,
    AV_CODEC_ID_MSS2 = 168,
    AV_CODEC_ID_VP9 = 169,
    AV_CODEC_ID_AIC = 170,
    AV_CODEC_ID_ESCAPE130_DEPRECATED = 171,
    AV_CODEC_ID_G2M_DEPRECATED = 172,
    AV_CODEC_ID_WEBP_DEPRECATED = 173,
    AV_CODEC_ID_HNM4_VIDEO = 174,
    AV_CODEC_ID_HEVC_DEPRECATED = 175,
    AV_CODEC_ID_FIC = 176,
    AV_CODEC_ID_ALIAS_PIX = 177,
    AV_CODEC_ID_BRENDER_PIX_DEPRECATED = 178,
    AV_CODEC_ID_PAF_VIDEO_DEPRECATED = 179,
    AV_CODEC_ID_EXR_DEPRECATED = 180,
    AV_CODEC_ID_VP7_DEPRECATED = 181,
    AV_CODEC_ID_SANM_DEPRECATED = 182,
    AV_CODEC_ID_SGIRLE_DEPRECATED = 183,
    AV_CODEC_ID_MVC1_DEPRECATED = 184,
    AV_CODEC_ID_MVC2_DEPRECATED = 185,
    AV_CODEC_ID_FIRST_AUDIO = 65536,
    AV_CODEC_ID_PCM_S16LE = 65536,
    CODEC_ID_FIRST_AUDIO = 65536,
    CODEC_ID_PCM_S16LE = 65536,
    AV_CODEC_ID_PCM_S16BE = 65537,
    CODEC_ID_PCM_S16BE = 65537,
    AV_CODEC_ID_PCM_U16LE = 65538,
    CODEC_ID_PCM_U16LE = 65538,
    AV_CODEC_ID_PCM_U16BE = 65539,
    CODEC_ID_PCM_U16BE = 65539,
    AV_CODEC_ID_PCM_S8 = 65540,
    CODEC_ID_PCM_S8 = 65540,
    AV_CODEC_ID_PCM_U8 = 65541,
    CODEC_ID_PCM_U8 = 65541,
    AV_CODEC_ID_PCM_MULAW = 65542,
    CODEC_ID_PCM_MULAW = 65542,
    AV_CODEC_ID_PCM_ALAW = 65543,
    CODEC_ID_PCM_ALAW = 65543,
    AV_CODEC_ID_PCM_S32LE = 65544,
    CODEC_ID_PCM_S32LE = 65544,
    AV_CODEC_ID_PCM_S32BE = 65545,
    CODEC_ID_PCM_S32BE = 65545,
    AV_CODEC_ID_PCM_U32LE = 65546,
    CODEC_ID_PCM_U32LE = 65546,
    AV_CODEC_ID_PCM_U32BE = 65547,
    CODEC_ID_PCM_U32BE = 65547,
    AV_CODEC_ID_PCM_S24LE = 65548,
    CODEC_ID_PCM_S24LE = 65548,
    AV_CODEC_ID_PCM_S24BE = 65549,
    CODEC_ID_PCM_S24BE = 65549,
    AV_CODEC_ID_PCM_U24LE = 65550,
    CODEC_ID_PCM_U24LE = 65550,
    AV_CODEC_ID_PCM_U24BE = 65551,
    CODEC_ID_PCM_U24BE = 65551,
    AV_CODEC_ID_PCM_S24DAUD = 65552,
    CODEC_ID_PCM_S24DAUD = 65552,
    AV_CODEC_ID_PCM_ZORK = 65553,
    CODEC_ID_PCM_ZORK = 65553,
    AV_CODEC_ID_PCM_S16LE_PLANAR = 65554,
    CODEC_ID_PCM_S16LE_PLANAR = 65554,
    AV_CODEC_ID_PCM_DVD = 65555,
    CODEC_ID_PCM_DVD = 65555,
    AV_CODEC_ID_PCM_F32BE = 65556,
    CODEC_ID_PCM_F32BE = 65556,
    AV_CODEC_ID_PCM_F32LE = 65557,
    CODEC_ID_PCM_F32LE = 65557,
    AV_CODEC_ID_PCM_F64BE = 65558,
    CODEC_ID_PCM_F64BE = 65558,
    AV_CODEC_ID_PCM_F64LE = 65559,
    CODEC_ID_PCM_F64LE = 65559,
    AV_CODEC_ID_PCM_BLURAY = 65560,
    CODEC_ID_PCM_BLURAY = 65560,
    AV_CODEC_ID_PCM_LXF = 65561,
    CODEC_ID_PCM_LXF = 65561,
    AV_CODEC_ID_S302M = 65562,
    CODEC_ID_S302M = 65562,
    AV_CODEC_ID_PCM_S8_PLANAR = 65563,
    CODEC_ID_PCM_S8_PLANAR = 65563,
    AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED = 65564,
    AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED = 65565,
    AV_CODEC_ID_ADPCM_IMA_QT = 69632,
    CODEC_ID_ADPCM_IMA_QT = 69632,
    AV_CODEC_ID_ADPCM_IMA_WAV = 69633,
    CODEC_ID_ADPCM_IMA_WAV = 69633,
    AV_CODEC_ID_ADPCM_IMA_DK3 = 69634,
    CODEC_ID_ADPCM_IMA_DK3 = 69634,
    AV_CODEC_ID_ADPCM_IMA_DK4 = 69635,
    CODEC_ID_ADPCM_IMA_DK4 = 69635,
    AV_CODEC_ID_ADPCM_IMA_WS = 69636,
    CODEC_ID_ADPCM_IMA_WS = 69636,
    AV_CODEC_ID_ADPCM_IMA_SMJPEG = 69637,
    CODEC_ID_ADPCM_IMA_SMJPEG = 69637,
    AV_CODEC_ID_ADPCM_MS = 69638,
    CODEC_ID_ADPCM_MS = 69638,
    AV_CODEC_ID_ADPCM_4XM = 69639,
    CODEC_ID_ADPCM_4XM = 69639,
    AV_CODEC_ID_ADPCM_XA = 69640,
    CODEC_ID_ADPCM_XA = 69640,
    AV_CODEC_ID_ADPCM_ADX = 69641,
    CODEC_ID_ADPCM_ADX = 69641,
    AV_CODEC_ID_ADPCM_EA = 69642,
    CODEC_ID_ADPCM_EA = 69642,
    AV_CODEC_ID_ADPCM_G726 = 69643,
    CODEC_ID_ADPCM_G726 = 69643,
    AV_CODEC_ID_ADPCM_CT = 69644,
    CODEC_ID_ADPCM_CT = 69644,
    AV_CODEC_ID_ADPCM_SWF = 69645,
    CODEC_ID_ADPCM_SWF = 69645,
    AV_CODEC_ID_ADPCM_YAMAHA = 69646,
    CODEC_ID_ADPCM_YAMAHA = 69646,
    AV_CODEC_ID_ADPCM_SBPRO_4 = 69647,
    CODEC_ID_ADPCM_SBPRO_4 = 69647,
    AV_CODEC_ID_ADPCM_SBPRO_3 = 69648,
    CODEC_ID_ADPCM_SBPRO_3 = 69648,
    AV_CODEC_ID_ADPCM_SBPRO_2 = 69649,
    CODEC_ID_ADPCM_SBPRO_2 = 69649,
    AV_CODEC_ID_ADPCM_THP = 69650,
    CODEC_ID_ADPCM_THP = 69650,
    AV_CODEC_ID_ADPCM_IMA_AMV = 69651,
    CODEC_ID_ADPCM_IMA_AMV = 69651,
    AV_CODEC_ID_ADPCM_EA_R1 = 69652,
    CODEC_ID_ADPCM_EA_R1 = 69652,
    AV_CODEC_ID_ADPCM_EA_R3 = 69653,
    CODEC_ID_ADPCM_EA_R3 = 69653,
    AV_CODEC_ID_ADPCM_EA_R2 = 69654,
    CODEC_ID_ADPCM_EA_R2 = 69654,
    AV_CODEC_ID_ADPCM_IMA_EA_SEAD = 69655,
    CODEC_ID_ADPCM_IMA_EA_SEAD = 69655,
    AV_CODEC_ID_ADPCM_IMA_EA_EACS = 69656,
    CODEC_ID_ADPCM_IMA_EA_EACS = 69656,
    AV_CODEC_ID_ADPCM_EA_XAS = 69657,
    CODEC_ID_ADPCM_EA_XAS = 69657,
    AV_CODEC_ID_ADPCM_EA_MAXIS_XA = 69658,
    CODEC_ID_ADPCM_EA_MAXIS_XA = 69658,
    AV_CODEC_ID_ADPCM_IMA_ISS = 69659,
    CODEC_ID_ADPCM_IMA_ISS = 69659,
    AV_CODEC_ID_ADPCM_G722 = 69660,
    CODEC_ID_ADPCM_G722 = 69660,
    AV_CODEC_ID_ADPCM_IMA_APC = 69661,
    CODEC_ID_ADPCM_IMA_APC = 69661,
    AV_CODEC_ID_ADPCM_VIMA_DEPRECATED = 69662,
    AV_CODEC_ID_AMR_NB = 73728,
    CODEC_ID_AMR_NB = 73728,
    AV_CODEC_ID_AMR_WB = 73729,
    CODEC_ID_AMR_WB = 73729,
    AV_CODEC_ID_RA_144 = 77824,
    CODEC_ID_RA_144 = 77824,
    AV_CODEC_ID_RA_288 = 77825,
    CODEC_ID_RA_288 = 77825,
    AV_CODEC_ID_ROQ_DPCM = 81920,
    CODEC_ID_ROQ_DPCM = 81920,
    AV_CODEC_ID_INTERPLAY_DPCM = 81921,
    CODEC_ID_INTERPLAY_DPCM = 81921,
    AV_CODEC_ID_XAN_DPCM = 81922,
    CODEC_ID_XAN_DPCM = 81922,
    AV_CODEC_ID_SOL_DPCM = 81923,
    CODEC_ID_SOL_DPCM = 81923,
    AV_CODEC_ID_MP2 = 86016,
    CODEC_ID_MP2 = 86016,
    AV_CODEC_ID_MP3 = 86017,
    CODEC_ID_MP3 = 86017,
    AV_CODEC_ID_AAC = 86018,
    CODEC_ID_AAC = 86018,
    AV_CODEC_ID_AC3 = 86019,
    CODEC_ID_AC3 = 86019,
    AV_CODEC_ID_DTS = 86020,
    CODEC_ID_DTS = 86020,
    AV_CODEC_ID_VORBIS = 86021,
    CODEC_ID_VORBIS = 86021,
    AV_CODEC_ID_DVAUDIO = 86022,
    CODEC_ID_DVAUDIO = 86022,
    AV_CODEC_ID_WMAV1 = 86023,
    CODEC_ID_WMAV1 = 86023,
    AV_CODEC_ID_WMAV2 = 86024,
    CODEC_ID_WMAV2 = 86024,
    AV_CODEC_ID_MACE3 = 86025,
    CODEC_ID_MACE3 = 86025,
    AV_CODEC_ID_MACE6 = 86026,
    CODEC_ID_MACE6 = 86026,
    AV_CODEC_ID_VMDAUDIO = 86027,
    CODEC_ID_VMDAUDIO = 86027,
    AV_CODEC_ID_FLAC = 86028,
    CODEC_ID_FLAC = 86028,
    AV_CODEC_ID_MP3ADU = 86029,
    CODEC_ID_MP3ADU = 86029,
    AV_CODEC_ID_MP3ON4 = 86030,
    CODEC_ID_MP3ON4 = 86030,
    AV_CODEC_ID_SHORTEN = 86031,
    CODEC_ID_SHORTEN = 86031,
    AV_CODEC_ID_ALAC = 86032,
    CODEC_ID_ALAC = 86032,
    AV_CODEC_ID_WESTWOOD_SND1 = 86033,
    CODEC_ID_WESTWOOD_SND1 = 86033,
    AV_CODEC_ID_GSM = 86034,
    CODEC_ID_GSM = 86034,
    AV_CODEC_ID_QDM2 = 86035,
    CODEC_ID_QDM2 = 86035,
    AV_CODEC_ID_COOK = 86036,
    CODEC_ID_COOK = 86036,
    AV_CODEC_ID_TRUESPEECH = 86037,
    CODEC_ID_TRUESPEECH = 86037,
    AV_CODEC_ID_TTA = 86038,
    CODEC_ID_TTA = 86038,
    AV_CODEC_ID_SMACKAUDIO = 86039,
    CODEC_ID_SMACKAUDIO = 86039,
    AV_CODEC_ID_QCELP = 86040,
    CODEC_ID_QCELP = 86040,
    AV_CODEC_ID_WAVPACK = 86041,
    CODEC_ID_WAVPACK = 86041,
    AV_CODEC_ID_DSICINAUDIO = 86042,
    CODEC_ID_DSICINAUDIO = 86042,
    AV_CODEC_ID_IMC = 86043,
    CODEC_ID_IMC = 86043,
    AV_CODEC_ID_MUSEPACK7 = 86044,
    CODEC_ID_MUSEPACK7 = 86044,
    AV_CODEC_ID_MLP = 86045,
    CODEC_ID_MLP = 86045,
    AV_CODEC_ID_GSM_MS = 86046,
    CODEC_ID_GSM_MS = 86046,
    AV_CODEC_ID_ATRAC3 = 86047,
    CODEC_ID_ATRAC3 = 86047,
    AV_CODEC_ID_VOXWARE = 86048,
    CODEC_ID_VOXWARE = 86048,
    AV_CODEC_ID_APE = 86049,
    CODEC_ID_APE = 86049,
    AV_CODEC_ID_NELLYMOSER = 86050,
    CODEC_ID_NELLYMOSER = 86050,
    AV_CODEC_ID_MUSEPACK8 = 86051,
    CODEC_ID_MUSEPACK8 = 86051,
    AV_CODEC_ID_SPEEX = 86052,
    CODEC_ID_SPEEX = 86052,
    AV_CODEC_ID_WMAVOICE = 86053,
    CODEC_ID_WMAVOICE = 86053,
    AV_CODEC_ID_WMAPRO = 86054,
    CODEC_ID_WMAPRO = 86054,
    AV_CODEC_ID_WMALOSSLESS = 86055,
    CODEC_ID_WMALOSSLESS = 86055,
    AV_CODEC_ID_ATRAC3P = 86056,
    CODEC_ID_ATRAC3P = 86056,
    AV_CODEC_ID_EAC3 = 86057,
    CODEC_ID_EAC3 = 86057,
    AV_CODEC_ID_SIPR = 86058,
    CODEC_ID_SIPR = 86058,
    AV_CODEC_ID_MP1 = 86059,
    CODEC_ID_MP1 = 86059,
    AV_CODEC_ID_TWINVQ = 86060,
    CODEC_ID_TWINVQ = 86060,
    AV_CODEC_ID_TRUEHD = 86061,
    CODEC_ID_TRUEHD = 86061,
    AV_CODEC_ID_MP4ALS = 86062,
    CODEC_ID_MP4ALS = 86062,
    AV_CODEC_ID_ATRAC1 = 86063,
    CODEC_ID_ATRAC1 = 86063,
    AV_CODEC_ID_BINKAUDIO_RDFT = 86064,
    CODEC_ID_BINKAUDIO_RDFT = 86064,
    AV_CODEC_ID_BINKAUDIO_DCT = 86065,
    CODEC_ID_BINKAUDIO_DCT = 86065,
    AV_CODEC_ID_AAC_LATM = 86066,
    CODEC_ID_AAC_LATM = 86066,
    AV_CODEC_ID_QDMC = 86067,
    CODEC_ID_QDMC = 86067,
    AV_CODEC_ID_CELT = 86068,
    CODEC_ID_CELT = 86068,
    AV_CODEC_ID_G723_1 = 86069,
    CODEC_ID_G723_1 = 86069,
    AV_CODEC_ID_G729 = 86070,
    CODEC_ID_G729 = 86070,
    AV_CODEC_ID_8SVX_EXP = 86071,
    CODEC_ID_8SVX_EXP = 86071,
    AV_CODEC_ID_8SVX_FIB = 86072,
    CODEC_ID_8SVX_FIB = 86072,
    AV_CODEC_ID_BMV_AUDIO = 86073,
    CODEC_ID_BMV_AUDIO = 86073,
    AV_CODEC_ID_RALF = 86074,
    CODEC_ID_RALF = 86074,
    AV_CODEC_ID_IAC = 86075,
    CODEC_ID_IAC = 86075,
    AV_CODEC_ID_ILBC = 86076,
    CODEC_ID_ILBC = 86076,
    AV_CODEC_ID_OPUS_DEPRECATED = 86077,
    AV_CODEC_ID_COMFORT_NOISE = 86078,
    AV_CODEC_ID_TAK_DEPRECATED = 86079,
    AV_CODEC_ID_METASOUND = 86080,
    AV_CODEC_ID_PAF_AUDIO_DEPRECATED = 86081,
    AV_CODEC_ID_ON2AVC = 86082,
    AV_CODEC_ID_DVD_SUBTITLE = 94208,
    AV_CODEC_ID_FIRST_SUBTITLE = 94208,
    CODEC_ID_DVD_SUBTITLE = 94208,
    CODEC_ID_FIRST_SUBTITLE = 94208,
    AV_CODEC_ID_DVB_SUBTITLE = 94209,
    CODEC_ID_DVB_SUBTITLE = 94209,
    AV_CODEC_ID_TEXT = 94210,
    CODEC_ID_TEXT = 94210,
    AV_CODEC_ID_XSUB = 94211,
    CODEC_ID_XSUB = 94211,
    AV_CODEC_ID_SSA = 94212,
    CODEC_ID_SSA = 94212,
    AV_CODEC_ID_MOV_TEXT = 94213,
    CODEC_ID_MOV_TEXT = 94213,
    AV_CODEC_ID_HDMV_PGS_SUBTITLE = 94214,
    CODEC_ID_HDMV_PGS_SUBTITLE = 94214,
    AV_CODEC_ID_DVB_TELETEXT = 94215,
    CODEC_ID_DVB_TELETEXT = 94215,
    AV_CODEC_ID_SRT = 94216,
    CODEC_ID_SRT = 94216,
    AV_CODEC_ID_FIRST_UNKNOWN = 98304,
    AV_CODEC_ID_TTF = 98304,
    CODEC_ID_FIRST_UNKNOWN = 98304,
    CODEC_ID_TTF = 98304,
    AV_CODEC_ID_PROBE = 102400,
    CODEC_ID_PROBE = 102400,
    AV_CODEC_ID_MPEG2TS = 131072,
    CODEC_ID_MPEG2TS = 131072,
    AV_CODEC_ID_MPEG4SYSTEMS = 131073,
    CODEC_ID_MPEG4SYSTEMS = 131073,
    AV_CODEC_ID_FFMETADATA = 135168,
    CODEC_ID_FFMETADATA = 135168,
    AV_CODEC_ID_G2M = 4665933,
    CODEC_ID_G2M = 4665933,
    AV_CODEC_ID_IDF = 4801606,
    CODEC_ID_IDF = 4801606,
    AV_CODEC_ID_OTF = 5198918,
    CODEC_ID_OTF = 5198918,
    AV_CODEC_ID_PCM_S24LE_PLANAR = 407917392,
    AV_CODEC_ID_PCM_S32LE_PLANAR = 542135120,
    AV_CODEC_ID_012V = 808530518,
    AV_CODEC_ID_EXR = 809850962,
    CODEC_ID_EXR = 809850962,
    AV_CODEC_ID_ADPCM_G726LE = 909260615,
    AV_CODEC_ID_ADPCM_AFC = 1095123744,
    AV_CODEC_ID_APNG = 1095781959,
    AV_CODEC_ID_ASS = 1095979808,
    AV_CODEC_ID_AVRP = 1096176208,
    CODEC_ID_AVRP = 1096176208,
    AV_CODEC_ID_AVRN = 1096176238,
    AV_CODEC_ID_AVUI = 1096176969,
    CODEC_ID_AVUI = 1096176969,
    AV_CODEC_ID_AYUV = 1096373590,
    CODEC_ID_AYUV = 1096373590,
    AV_CODEC_ID_BRENDER_PIX = 1112557912,
    AV_CODEC_ID_BINTEXT = 1112823892,
    CODEC_ID_BINTEXT = 1112823892,
    AV_CODEC_ID_CPIA = 1129335105,
    AV_CODEC_ID_BIN_DATA = 1145132097,
    AV_CODEC_ID_DVD_NAV = 1145979222,
    AV_CODEC_ID_DSD_LSBF_PLANAR = 1146307633,
    AV_CODEC_ID_DSD_MSBF_PLANAR = 1146307640,
    AV_CODEC_ID_DSD_LSBF = 1146307660,
    AV_CODEC_ID_DSD_MSBF = 1146307661,
    AV_CODEC_ID_ADPCM_DTK = 1146374944,
    AV_CODEC_ID_ESCAPE130 = 1160852272,
    CODEC_ID_ESCAPE130 = 1160852272,
    AV_CODEC_ID_FFWAVESYNTH = 1179014995,
    CODEC_ID_FFWAVESYNTH = 1179014995,
    AV_CODEC_ID_HEVC = 1211250229,
    AV_CODEC_ID_JACOSUB = 1246975298,
    CODEC_ID_JACOSUB = 1246975298,
    AV_CODEC_ID_SMPTE_KLV = 1263294017,
    AV_CODEC_ID_MPL2 = 1297108018,
    AV_CODEC_ID_MVC1 = 1297498929,
    AV_CODEC_ID_MVC2 = 1297498930,
    AV_CODEC_ID_ADPCM_IMA_OKI = 1330333984,
    AV_CODEC_ID_OPUS = 1330664787,
    CODEC_ID_OPUS = 1330664787,
    AV_CODEC_ID_PAF_AUDIO = 1346455105,
    CODEC_ID_PAF_AUDIO = 1346455105,
    AV_CODEC_ID_PAF_VIDEO = 1346455126,
    CODEC_ID_PAF_VIDEO = 1346455126,
    AV_CODEC_ID_PCM_S16BE_PLANAR = 1347637264,
    AV_CODEC_ID_PJS = 1349012051,
    AV_CODEC_ID_ADPCM_IMA_RAD = 1380008992,
    AV_CODEC_ID_REALTEXT = 1381259348,
    CODEC_ID_REALTEXT = 1381259348,
    AV_CODEC_ID_SAMI = 1396788553,
    CODEC_ID_SAMI = 1396788553,
    AV_CODEC_ID_SANM = 1396788813,
    CODEC_ID_SANM = 1396788813,
    AV_CODEC_ID_SGIRLE = 1397180754,
    AV_CODEC_ID_SMVJPEG = 1397577290,
    AV_CODEC_ID_SNOW = 1397641047,
    CODEC_ID_SNOW = 1397641047,
    AV_CODEC_ID_SONIC = 1397706307,
    CODEC_ID_SONIC = 1397706307,
    AV_CODEC_ID_SONIC_LS = 1397706316,
    CODEC_ID_SONIC_LS = 1397706316,
    AV_CODEC_ID_SUBRIP = 1397909872,
    AV_CODEC_ID_SUBVIEWER1 = 1398953521,
    AV_CODEC_ID_STL = 1399870540,
    AV_CODEC_ID_SUBVIEWER = 1400201814,
    CODEC_ID_SUBVIEWER = 1400201814,
    AV_CODEC_ID_TARGA_Y216 = 1412575542,
    AV_CODEC_ID_TIMED_ID3 = 1414087731,
    AV_CODEC_ID_V308 = 1446195256,
    CODEC_ID_V308 = 1446195256,
    AV_CODEC_ID_V408 = 1446260792,
    CODEC_ID_V408 = 1446260792,
    AV_CODEC_ID_ADPCM_VIMA = 1447644481,
    AV_CODEC_ID_VIMA = 1447644481,
    CODEC_ID_VIMA = 1447644481,
    AV_CODEC_ID_VP7 = 1448097584,
    AV_CODEC_ID_VPLAYER = 1448111218,
    AV_CODEC_ID_WEBP = 1464156752,
    AV_CODEC_ID_WEBVTT = 1465275476,
    AV_CODEC_ID_XBIN = 1480739150,
    CODEC_ID_XBIN = 1480739150,
    AV_CODEC_ID_XFACE = 1480999235,
    AV_CODEC_ID_Y41P = 1496592720,
    CODEC_ID_Y41P = 1496592720,
    AV_CODEC_ID_YUV4 = 1498764852,
    CODEC_ID_YUV4 = 1498764852,
    AV_CODEC_ID_EIA_608 = 1664495672,
    CODEC_ID_EIA_608 = 1664495672,
    AV_CODEC_ID_MICRODVD = 1833195076,
    CODEC_ID_MICRODVD = 1833195076,
    AV_CODEC_ID_EVRC = 1936029283,
    AV_CODEC_ID_SMV = 1936944502,
    AV_CODEC_ID_TAK = 1950507339
} AVCodecID;

typedef struct AVCodecInternal AVCodecInternal;

typedef struct AVRational AVRational;

typedef enum AVPictureType
{
    AV_PICTURE_TYPE_NONE = 0,
    AV_PICTURE_TYPE_I = 1,
    AV_PICTURE_TYPE_P = 2,
    AV_PICTURE_TYPE_B = 3,
    AV_PICTURE_TYPE_S = 4,
    AV_PICTURE_TYPE_SI = 5,
    AV_PICTURE_TYPE_SP = 6,
    AV_PICTURE_TYPE_BI = 7
} AVPictureType;

typedef struct AVPanScan AVPanScan;

typedef struct AVBufferRef AVBufferRef;

typedef struct AVFrameSideData AVFrameSideData;

typedef enum AVColorRange
{
    AVCOL_RANGE_UNSPECIFIED = 0,
    AVCOL_RANGE_MPEG = 1,
    AVCOL_RANGE_JPEG = 2,
    AVCOL_RANGE_NB = 3
} AVColorRange;

typedef enum AVColorPrimaries
{
    AVCOL_PRI_RESERVED0 = 0,
    AVCOL_PRI_BT709 = 1,
    AVCOL_PRI_UNSPECIFIED = 2,
    AVCOL_PRI_RESERVED = 3,
    AVCOL_PRI_BT470M = 4,
    AVCOL_PRI_BT470BG = 5,
    AVCOL_PRI_SMPTE170M = 6,
    AVCOL_PRI_SMPTE240M = 7,
    AVCOL_PRI_FILM = 8,
    AVCOL_PRI_BT2020 = 9,
    AVCOL_PRI_NB = 10
} AVColorPrimaries;

typedef enum AVColorTransferCharacteristic
{
    AVCOL_TRC_RESERVED0 = 0,
    AVCOL_TRC_BT709 = 1,
    AVCOL_TRC_UNSPECIFIED = 2,
    AVCOL_TRC_RESERVED = 3,
    AVCOL_TRC_GAMMA22 = 4,
    AVCOL_TRC_GAMMA28 = 5,
    AVCOL_TRC_SMPTE170M = 6,
    AVCOL_TRC_SMPTE240M = 7,
    AVCOL_TRC_LINEAR = 8,
    AVCOL_TRC_LOG = 9,
    AVCOL_TRC_LOG_SQRT = 10,
    AVCOL_TRC_IEC61966_2_4 = 11,
    AVCOL_TRC_BT1361_ECG = 12,
    AVCOL_TRC_IEC61966_2_1 = 13,
    AVCOL_TRC_BT2020_10 = 14,
    AVCOL_TRC_BT2020_12 = 15,
    AVCOL_TRC_NB = 16
} AVColorTransferCharacteristic;

typedef enum AVColorSpace
{
    AVCOL_SPC_RGB = 0,
    AVCOL_SPC_BT709 = 1,
    AVCOL_SPC_UNSPECIFIED = 2,
    AVCOL_SPC_RESERVED = 3,
    AVCOL_SPC_FCC = 4,
    AVCOL_SPC_BT470BG = 5,
    AVCOL_SPC_SMPTE170M = 6,
    AVCOL_SPC_SMPTE240M = 7,
    AVCOL_SPC_YCOCG = 8,
    AVCOL_SPC_BT2020_NCL = 9,
    AVCOL_SPC_BT2020_CL = 10,
    AVCOL_SPC_NB = 11
} AVColorSpace;

typedef enum AVChromaLocation
{
    AVCHROMA_LOC_UNSPECIFIED = 0,
    AVCHROMA_LOC_LEFT = 1,
    AVCHROMA_LOC_CENTER = 2,
    AVCHROMA_LOC_TOPLEFT = 3,
    AVCHROMA_LOC_TOP = 4,
    AVCHROMA_LOC_BOTTOMLEFT = 5,
    AVCHROMA_LOC_BOTTOM = 6,
    AVCHROMA_LOC_NB = 7
} AVChromaLocation;

typedef struct AVDictionary AVDictionary;

typedef ushort __uint16_t;

typedef __uint16_t uint16_t;

typedef enum AVFieldOrder
{
    AV_FIELD_UNKNOWN = 0,
    AV_FIELD_PROGRESSIVE = 1,
    AV_FIELD_TT = 2,
    AV_FIELD_BB = 3,
    AV_FIELD_TB = 4,
    AV_FIELD_BT = 5
} AVFieldOrder;

typedef enum AVSampleFormat
{
    AV_SAMPLE_FMT_NONE = -1,
    AV_SAMPLE_FMT_U8 = 0,
    AV_SAMPLE_FMT_S16 = 1,
    AV_SAMPLE_FMT_S32 = 2,
    AV_SAMPLE_FMT_FLT = 3,
    AV_SAMPLE_FMT_DBL = 4,
    AV_SAMPLE_FMT_U8P = 5,
    AV_SAMPLE_FMT_S16P = 6,
    AV_SAMPLE_FMT_S32P = 7,
    AV_SAMPLE_FMT_FLTP = 8,
    AV_SAMPLE_FMT_DBLP = 9,
    AV_SAMPLE_FMT_NB = 10
} AVSampleFormat;

typedef enum AVAudioServiceType
{
    AV_AUDIO_SERVICE_TYPE_MAIN = 0,
    AV_AUDIO_SERVICE_TYPE_EFFECTS = 1,
    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,
    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED = 3,
    AV_AUDIO_SERVICE_TYPE_DIALOGUE = 4,
    AV_AUDIO_SERVICE_TYPE_COMMENTARY = 5,
    AV_AUDIO_SERVICE_TYPE_EMERGENCY = 6,
    AV_AUDIO_SERVICE_TYPE_VOICE_OVER = 7,
    AV_AUDIO_SERVICE_TYPE_KARAOKE = 8,
    AV_AUDIO_SERVICE_TYPE_NB = 9
} AVAudioServiceType;

typedef struct RcOverride RcOverride;

typedef struct AVHWAccel AVHWAccel;

typedef struct MpegEncContext MpegEncContext;

typedef enum AVDiscard
{
    AVDISCARD_NONE = -16,
    AVDISCARD_DEFAULT = 0,
    AVDISCARD_NONREF = 8,
    AVDISCARD_BIDIR = 16,
    AVDISCARD_NONINTRA = 24,
    AVDISCARD_NONKEY = 32,
    AVDISCARD_ALL = 48
} AVDiscard;

typedef struct AVCodecDescriptor AVCodecDescriptor;

typedef struct pl_muxer_itf_t pl_muxer_itf_t;

typedef enum pl_muxer_config_index_t
{
    PL_MUXER_CONFIG_INDEX_NONE = 0,
    PL_MUXER_CONFIG_INDEX_EXTRADATA = 1,
    PL_MUXER_CONFIG_INDEX_FRAGMENTED_MP4 = 2
} pl_muxer_config_index_t;

typedef struct __sbuf __sbuf;

typedef struct duss_hal_obj_dev_t duss_hal_obj_dev_t;

typedef int __int32_t;

typedef __int32_t int32_t;

typedef int32_t duss_result_t;

typedef void (*duss_osal_task_entry_t)(void *);

typedef enum duss_osal_priority_t
{
    DUSS_OSAL_PRI_NORMAL = 0,
    DUSS_OSAL_PRI_LOWEST = 1,
    DUSS_OSAL_PRI_LOW1 = 3,
    DUSS_OSAL_PRI_LOW2 = 6,
    DUSS_OSAL_PRI_LOW3 = 9,
    DUSS_OSAL_PRI_MID1 = 13,
    DUSS_OSAL_PRI_MID2 = 16,
    DUSS_OSAL_PRI_MID3 = 19,
    DUSS_OSAL_PRI_HIGH1 = 23,
    DUSS_OSAL_PRI_HIGH2 = 26,
    DUSS_OSAL_PRI_HIGH3 = 29,
    DUSS_OSAL_PRI_TIM1 = 33,
    DUSS_OSAL_PRI_TIM2 = 36,
    DUSS_OSAL_PRI_TIM3 = 39,
    DUSS_OSAL_PRI_INT = 50,
    DUSS_OSAL_PRI_HIGHEST = 99
} duss_osal_priority_t;

typedef struct duss_hal_storage_params duss_hal_storage_params;

typedef struct duss_hal_storage_info duss_hal_storage_info;

typedef struct AVOption AVOption;

typedef struct AVOptionRange AVOptionRange;

typedef struct AVProfile AVProfile;

typedef struct AVCodecDefault AVCodecDefault;

typedef struct AVSubtitleRect AVSubtitleRect;

typedef struct AVPacketSideData AVPacketSideData;

typedef struct AVBuffer AVBuffer;

typedef enum AVFrameSideDataType
{
    AV_FRAME_DATA_PANSCAN = 0,
    AV_FRAME_DATA_A53_CC = 1,
    AV_FRAME_DATA_STEREO3D = 2,
    AV_FRAME_DATA_MATRIXENCODING = 3,
    AV_FRAME_DATA_DOWNMIX_INFO = 4,
    AV_FRAME_DATA_REPLAYGAIN = 5,
    AV_FRAME_DATA_DISPLAYMATRIX = 6,
    AV_FRAME_DATA_AFD = 7,
    AV_FRAME_DATA_MOTION_VECTORS = 8,
    AV_FRAME_DATA_SKIP_SAMPLES = 9
} AVFrameSideDataType;

typedef uint8_t duss_hal_state_t;

typedef uint8_t duss_hal_class_t;

typedef enum duss_storage_client_type_t
{
    DUSS_STORAGE_EMMC0 = 0,
    DUSS_STORAGE_SDCARD0 = 1,
    DUSS_STORAGE_SDCARD1 = 2,
    DUSS_STORAGE_UDISK = 3
} duss_storage_client_type_t;

typedef enum AVOptionType
{
    AV_OPT_TYPE_FLAGS = 0,
    FF_OPT_TYPE_FLAGS = 0,
    AV_OPT_TYPE_INT = 1,
    FF_OPT_TYPE_INT = 1,
    AV_OPT_TYPE_INT64 = 2,
    FF_OPT_TYPE_INT64 = 2,
    AV_OPT_TYPE_DOUBLE = 3,
    FF_OPT_TYPE_DOUBLE = 3,
    AV_OPT_TYPE_FLOAT = 4,
    FF_OPT_TYPE_FLOAT = 4,
    AV_OPT_TYPE_STRING = 5,
    FF_OPT_TYPE_STRING = 5,
    AV_OPT_TYPE_RATIONAL = 6,
    FF_OPT_TYPE_RATIONAL = 6,
    AV_OPT_TYPE_BINARY = 7,
    FF_OPT_TYPE_BINARY = 7,
    AV_OPT_TYPE_DICT = 8,
    AV_OPT_TYPE_CONST = 128,
    FF_OPT_TYPE_CONST = 128,
    AV_OPT_TYPE_CHANNEL_LAYOUT = 1128811585,
    AV_OPT_TYPE_COLOR = 1129270354,
    AV_OPT_TYPE_DURATION = 1146442272,
    AV_OPT_TYPE_PIXEL_FMT = 1346784596,
    AV_OPT_TYPE_SAMPLE_FMT = 1397116244,
    AV_OPT_TYPE_IMAGE_SIZE = 1397316165,
    AV_OPT_TYPE_VIDEO_RATE = 1448231252
} AVOptionType;

typedef union anon_union_conflictac8f4_for_default_val anon_union_conflictac8f4_for_default_val;

typedef struct AVPicture AVPicture;

typedef enum AVSubtitleType
{
    SUBTITLE_NONE = 0,
    SUBTITLE_BITMAP = 1,
    SUBTITLE_TEXT = 2,
    SUBTITLE_ASS = 3
} AVSubtitleType;

typedef enum AVPacketSideDataType
{
    AV_PKT_DATA_PALETTE = 0,
    AV_PKT_DATA_NEW_EXTRADATA = 1,
    AV_PKT_DATA_PARAM_CHANGE = 2,
    AV_PKT_DATA_H263_MB_INFO = 3,
    AV_PKT_DATA_REPLAYGAIN = 4,
    AV_PKT_DATA_DISPLAYMATRIX = 5,
    AV_PKT_DATA_STEREO3D = 6,
    AV_PKT_DATA_SKIP_SAMPLES = 70,
    AV_PKT_DATA_JP_DUALMONO = 71,
    AV_PKT_DATA_STRINGS_METADATA = 72,
    AV_PKT_DATA_SUBTITLE_POSITION = 73,
    AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL = 74,
    AV_PKT_DATA_WEBVTT_IDENTIFIER = 75,
    AV_PKT_DATA_WEBVTT_SETTINGS = 76,
    AV_PKT_DATA_METADATA_UPDATE = 77
} AVPacketSideDataType;

struct duss_list_head
{
    struct duss_list_head *next;
    struct duss_list_head *prev;
};

struct duss_hal_obj_dev_t
{
    char *name;
    duss_hal_state_t obj_state;
    duss_hal_class_t obj_class;
    uint16_t obj_index;
    int32_t obj_refcnt;
    struct duss_osal_mutex_handle_t *obj_lock;
    struct duss_osal_mutex_handle_t *app_lock;
    duss_result_t (*open)(duss_hal_obj_handle_t, void *);
    duss_result_t (*close)(duss_hal_obj_handle_t);
    duss_result_t (*set_cfg)(duss_hal_obj_handle_t, void *);
    duss_result_t (*get_cfg)(duss_hal_obj_handle_t, void *);
    duss_result_t (*start)(duss_hal_obj_handle_t, void *);
    duss_result_t (*stop)(duss_hal_obj_handle_t, void *);
};

struct duss_hal_mem_config_t
{
    uint32_t reserved;
};

struct __sbuf
{
    uchar *_base;
    int _size;
};

struct duss_hal_storage_info
{
    char id[64];
    char fs[8];
    char path[256];
    char state;
    undefined field4_0x149;
    undefined field5_0x14a;
    undefined field6_0x14b;
    int speed;
    int uhs_grade;
    int capacity;
    int readonly;
    int block_size;
};

struct AVPacket
{
    struct AVBufferRef *buf;
    undefined field1_0x4;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    int64_t pts;
    int64_t dts;
    uint8_t *data;
    int size;
    int stream_index;
    int flags;
    struct AVPacketSideData *side_data;
    int side_data_elems;
    int duration;
    void (*destruct)(struct AVPacket *);
    void *priv;
    undefined field16_0x3c;
    undefined field17_0x3d;
    undefined field18_0x3e;
    undefined field19_0x3f;
    int64_t pos;
    int64_t convergence_duration;
    _Bool is_last_section;
    undefined field23_0x51;
    undefined field24_0x52;
    undefined field25_0x53;
    int32_t nal_total_size;
};

struct AVBuffer
{
};

struct sem_t
{
    uint count;
};

struct AVOptionRanges
{
    struct AVOptionRange **range;
    int nb_ranges;
    int nb_components;
};

struct AVCodecDescriptor
{
    enum AVCodecID id;
    enum AVMediaType type;
    char *name;
    char *long_name;
    int props;
    char **mime_types;
};

struct AVCodecInternal
{
};

struct AVRational
{
    int num;
    int den;
};

union anon_union_conflictac8f4_for_default_val
{
    int64_t i64;
    double dbl;
    char *str;
    struct AVRational q;
};

struct gs_playback_listener
{
    void *ctx;
    int (*event_cb)(void *, playback_event_t);
};

struct gs_sd_listener
{
    void *ctx;
    int (*event_cb)(void *, sd_event_t);
};

struct gs_meta_listener
{
    void *ctx;
    int (*event_cb)(void *, meta_event_t);
};

struct duss_hal_storage_params
{
    enum duss_storage_client_type_t client_id;
    void *user_data;
    void (*callback)(struct duss_hal_storage_info *, void *);
};

struct MpegEncContext
{
};

struct AVBufferRef
{
    struct AVBuffer *buffer;
    uint8_t *data;
    int size;
};

struct duss_osal_mutex_attrib_t
{
    char *name;
};

struct duss_osal_mutex_handle_t
{
    struct duss_osal_mutex_attrib_t attrib;
    struct sem_t sema;
};

struct duss_hal_mem_buf
{
};

struct AVCodecDefault
{
};

struct AVFrameSideData
{
    enum AVFrameSideDataType type;
    uint8_t *data;
    int size;
    struct AVDictionary *metadata;
};

struct duss_hal_mem_param_t
{
    uint32_t reserved;
};

struct duss_osal_task_attrib_t
{
    char *name;
    duss_osal_task_entry_t entry;
    void *param;
    enum duss_osal_priority_t priority;
    uint32_t stack_size;
    uint32_t time_slice;
    _Bool detached;
    undefined field7_0x19;
    undefined field8_0x1a;
    undefined field9_0x1b;
    uint32_t affinity_mask;
};

struct AVPicture
{
    uint8_t *data[8];
    int linesize[8];
};

struct AVSubtitleRect
{
    int x;
    int y;
    int w;
    int h;
    int nb_colors;
    struct AVPicture pict;
    enum AVSubtitleType type;
    char *text;
    char *ass;
    int flags;
};

struct gs_usb_listener
{
    void *ctx;
    int (*event_cb)(void *, usb_event_t);
};

struct AVOption
{
    char *name;
    char *help;
    int offset;
    enum AVOptionType type;
    union anon_union_conflictac8f4_for_default_val default_val;
    double min;
    double max;
    int flags;
    char *unit;
};

struct AVHWAccel
{
    char *name;
    enum AVMediaType type;
    enum AVCodecID id;
    enum AVPixelFormat pix_fmt;
    int capabilities;
    struct AVHWAccel *next;
    int (*alloc_frame)(struct AVCodecContext *, struct AVFrame *);
    int (*start_frame)(struct AVCodecContext *, uint8_t *, uint32_t);
    int (*decode_slice)(struct AVCodecContext *, uint8_t *, uint32_t);
    int (*end_frame)(struct AVCodecContext *);
    int frame_priv_data_size;
    void (*decode_mb)(struct MpegEncContext *);
    int (*init)(struct AVCodecContext *);
    int (*uninit)(struct AVCodecContext *);
    int priv_data_size;
};

struct AVCodecContext
{
    struct AVClass *av_class;
    int log_level_offset;
    enum AVMediaType codec_type;
    struct AVCodec *codec;
    char codec_name[32];
    enum AVCodecID codec_id;
    uint codec_tag;
    uint stream_codec_tag;
    void *priv_data;
    struct AVCodecInternal *internal;
    void *opaque;
    int bit_rate;
    int bit_rate_tolerance;
    int global_quality;
    int compression_level;
    int flags;
    int flags2;
    uint8_t *extradata;
    int extradata_size;
    struct AVRational time_base;
    int ticks_per_frame;
    int delay;
    int width;
    int height;
    int coded_width;
    int coded_height;
    int gop_size;
    enum AVPixelFormat pix_fmt;
    int me_method;
    void (*draw_horiz_band)(struct AVCodecContext *, struct AVFrame *, int *, int, int, int);
    AVPixelFormat (*get_format)(struct AVCodecContext *, enum AVPixelFormat *);
    int max_b_frames;
    float b_quant_factor;
    int rc_strategy;
    int b_frame_strategy;
    float b_quant_offset;
    int has_b_frames;
    int mpeg_quant;
    float i_quant_factor;
    float i_quant_offset;
    float lumi_masking;
    float temporal_cplx_masking;
    float spatial_cplx_masking;
    float p_masking;
    float dark_masking;
    int slice_count;
    int prediction_method;
    int *slice_offset;
    struct AVRational sample_aspect_ratio;
    int me_cmp;
    int me_sub_cmp;
    int mb_cmp;
    int ildct_cmp;
    int dia_size;
    int last_predictor_count;
    int pre_me;
    int me_pre_cmp;
    int pre_dia_size;
    int me_subpel_quality;
    int dtg_active_format;
    int me_range;
    int intra_quant_bias;
    int inter_quant_bias;
    int slice_flags;
    int xvmc_acceleration;
    int mb_decision;
    uint16_t *intra_matrix;
    uint16_t *inter_matrix;
    int scenechange_threshold;
    int noise_reduction;
    int me_threshold;
    int mb_threshold;
    int intra_dc_precision;
    int skip_top;
    int skip_bottom;
    float border_masking;
    int mb_lmin;
    int mb_lmax;
    int me_penalty_compensation;
    int bidir_refine;
    int brd_scale;
    int keyint_min;
    int refs;
    int chromaoffset;
    int scenechange_factor;
    int mv0_threshold;
    int b_sensitivity;
    enum AVColorPrimaries color_primaries;
    enum AVColorTransferCharacteristic color_trc;
    enum AVColorSpace colorspace;
    enum AVColorRange color_range;
    enum AVChromaLocation chroma_sample_location;
    int slices;
    enum AVFieldOrder field_order;
    int sample_rate;
    int channels;
    enum AVSampleFormat sample_fmt;
    int frame_size;
    int frame_number;
    int block_align;
    int cutoff;
    int request_channels;
    undefined field102_0x1bc;
    undefined field103_0x1bd;
    undefined field104_0x1be;
    undefined field105_0x1bf;
    uint64_t channel_layout;
    uint64_t request_channel_layout;
    enum AVAudioServiceType audio_service_type;
    enum AVSampleFormat request_sample_fmt;
    int (*get_buffer)(struct AVCodecContext *, struct AVFrame *);
    void (*release_buffer)(struct AVCodecContext *, struct AVFrame *);
    int (*reget_buffer)(struct AVCodecContext *, struct AVFrame *);
    int (*get_buffer2)(struct AVCodecContext *, struct AVFrame *, int);
    int refcounted_frames;
    float qcompress;
    float qblur;
    int qmin;
    int qmax;
    int max_qdiff;
    float rc_qsquish;
    float rc_qmod_amp;
    int rc_qmod_freq;
    int rc_buffer_size;
    int rc_override_count;
    struct RcOverride *rc_override;
    char *rc_eq;
    int rc_max_rate;
    int rc_min_rate;
    float rc_buffer_aggressivity;
    float rc_initial_cplx;
    float rc_max_available_vbv_use;
    float rc_min_vbv_overflow_use;
    int rc_initial_buffer_occupancy;
    int coder_type;
    int context_model;
    int lmin;
    int lmax;
    int frame_skip_threshold;
    int frame_skip_factor;
    int frame_skip_exp;
    int frame_skip_cmp;
    int trellis;
    int min_prediction_order;
    int max_prediction_order;
    undefined field145_0x264;
    undefined field146_0x265;
    undefined field147_0x266;
    undefined field148_0x267;
    int64_t timecode_frame_start;
    void (*rtp_callback)(struct AVCodecContext *, void *, int, int);
    int rtp_payload_size;
    int mv_bits;
    int header_bits;
    int i_tex_bits;
    int p_tex_bits;
    int i_count;
    int p_count;
    int skip_count;
    int misc_bits;
    int frame_bits;
    char *stats_out;
    char *stats_in;
    int workaround_bugs;
    int strict_std_compliance;
    int error_concealment;
    int debug;
    int debug_mv;
    int err_recognition;
    undefined field169_0x2bc;
    undefined field170_0x2bd;
    undefined field171_0x2be;
    undefined field172_0x2bf;
    int64_t reordered_opaque;
    struct AVHWAccel *hwaccel;
    void *hwaccel_context;
    uint64_t error[8];
    int dct_algo;
    int idct_algo;
    int bits_per_coded_sample;
    int bits_per_raw_sample;
    int lowres;
    struct AVFrame *coded_frame;
    int thread_count;
    int thread_type;
    int active_thread_type;
    int thread_safe_callbacks;
    int (*execute)(struct AVCodecContext *, int (*)(struct AVCodecContext *, void *), void *, int *, int, int);
    int (*execute2)(struct AVCodecContext *, int (*)(struct AVCodecContext *, void *, int, int), void *, int *, int);
    void *thread_opaque;
    int nsse_weight;
    int profile;
    int level;
    enum AVDiscard skip_loop_filter;
    enum AVDiscard skip_idct;
    enum AVDiscard skip_frame;
    uint8_t *subtitle_header;
    int subtitle_header_size;
    int error_rate;
    struct AVPacket *pkt;
    undefined field200_0x36c;
    undefined field201_0x36d;
    undefined field202_0x36e;
    undefined field203_0x36f;
    uint64_t vbv_delay;
    int side_data_only_packets;
    int initial_padding;
    struct AVRational framerate;
    struct AVRational pkt_timebase;
    struct AVCodecDescriptor *codec_descriptor;
    undefined field210_0x394;
    undefined field211_0x395;
    undefined field212_0x396;
    undefined field213_0x397;
    int64_t pts_correction_num_faulty_pts;
    int64_t pts_correction_num_faulty_dts;
    int64_t pts_correction_last_pts;
    int64_t pts_correction_last_dts;
    char *sub_charenc;
    int sub_charenc_mode;
    int skip_alpha;
    int seek_preroll;
    uint16_t *chroma_intra_matrix;
    uint8_t *dump_separator;
    char *codec_whitelist;
    int bit_depth_luma;
    int chroma_format_idc;
    undefined field227_0x3dc;
    undefined field228_0x3dd;
    undefined field229_0x3de;
    undefined field230_0x3df;
};

struct AVSubtitle
{
    uint16_t format;
    undefined field1_0x2;
    undefined field2_0x3;
    uint32_t start_display_time;
    uint32_t end_display_time;
    uint num_rects;
    struct AVSubtitleRect **rects;
    undefined field7_0x14;
    undefined field8_0x15;
    undefined field9_0x16;
    undefined field10_0x17;
    int64_t pts;
};

struct duss_osal_task_handle_t
{
    struct duss_osal_task_attrib_t attrib;
    pthread_t thread;
};

struct duss_storage_client
{
    _Bool start_flag;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    struct duss_hal_storage_params param;
    struct duss_hal_storage_info info;
};

struct AVDictionary
{
};

struct RcOverride
{
    int start_frame;
    int end_frame;
    int qscale;
    float quality_factor;
};

struct ion_info
{
    duss_hal_obj_handle_t mem_obj;
    struct duss_hal_mem_config_t mem_cfg;
    struct duss_hal_mem_param_t mem_param;
    duss_hal_mem_handle_t ion_buf;
    void *ion_virt_addr;
    uint32_t ion_len;
    struct duss_osal_mutex_handle_t *ion_mutex;
    uint32_t start_addr;
    uint32_t stop_addr;
    uint32_t size_waste;
};

struct AVClass
{
    char *class_name;
    char *(*item_name)(void *);
    struct AVOption *option;
    int version;
    int log_level_offset_offset;
    int parent_log_context_offset;
    void *(*child_next)(void *, void *);
    AVClass *(*child_class_next)(struct AVClass *);
    enum AVClassCategory category;
    AVClassCategory (*get_category)(void *);
    int (*query_ranges)(struct AVOptionRanges **, void *, char *, int);
};

struct duss_hal_obj
{
    struct duss_hal_obj_dev_t dev;
    void *dev_class;
    void *dev_priv;
};

struct AVPacketSideData
{
    uint8_t *data;
    int size;
    enum AVPacketSideDataType type;
};

struct pl_muxer_t
{
    struct pl_muxer_itf_t *itf;
    void *context;
    void *me;
};

struct __gs_local_sd_info
{
    duss_storage_client_t *sdcard_cli;
    _Bool sd_insert;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    sd_file_type_t sd_type;
    uint32_t sd_total_kbytes;
    uint32_t sd_free_kbytes;
    uint32_t sd_minfree_kbytes;
    uint8_t sd_status;
    uint8_t sd_formatting;
    _Bool sd_init;
    undefined field12_0x1b;
    struct duss_osal_mutex_handle_t *sd_status_mutex;
    gs_storage_listener_t *storage_listener;
    gs_sd_listener_t *sd_listener;
    gs_meta_listener_t *meta_listener;
    gs_playback_listener_t *pb_listener;
};

struct AVOptionRange
{
    char *str;
    undefined field1_0x4;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    double value_min;
    double value_max;
    double component_min;
    double component_max;
    int is_range;
    undefined field10_0x2c;
    undefined field11_0x2d;
    undefined field12_0x2e;
    undefined field13_0x2f;
};

struct gs_storage_listener
{
    void *ctx;
    int (*event_cb)(void *, storage_event_t);
};

struct gs_lv_transcode
{
    ion_info_t *ion_info;
    struct duss_osal_mutex_handle_t *rec_mutex;
    record_state_t cur_state;
    record_state_t tgt_state;
    _Bool b_rec_running;
    undefined field5_0x11;
    undefined field6_0x12;
    undefined field7_0x13;
    struct duss_osal_task_handle_t *rec_thread;
    uint8_t *lv_rec_state;
    gs_local_sd_info_t *sd_info;
    gs_sd_listener_t sd_listener;
    gs_usb_listener_t usb_listener;
    gs_media_cmd_chnl_t *mcc;
    int dmi_data_fd;
    int file_idx;
    char file_name[128];
    struct AVCodecContext *avcodec_ctx;
    p1_muxer_handle_t muxer;
    record_mode_t rec_mode;
    int video_stream_index;
    undefined field21_0xcc;
    undefined field22_0xcd;
    undefined field23_0xce;
    undefined field24_0xcf;
    int64_t cur_rec_time;
    char *sps_buf;
    uint32_t sps_len;
    struct duss_osal_mutex_handle_t *video_list_mutex;
    struct duss_list_head video_list;
    int num_frames;
    _Bool b_running;
    _Bool b_eos;
    undefined field33_0xf2;
    undefined field34_0xf3;
    struct duss_osal_task_handle_t *task_rx;
    uint32_t frames_received;
    uint32_t frames_write;
    uint32_t last_key_frm_idx;
    uint32_t last_frame_idx;
    _Bool b_wrf_running;
    undefined field41_0x109;
    undefined field42_0x10a;
    undefined field43_0x10b;
    FILE *p_file;
    struct duss_osal_task_handle_t *task_wrf;
    int first_idx_in_file;
    _Bool b_pending_new_file;
    _Bool b_avin_recording;
    undefined field49_0x11a;
    undefined field50_0x11b;
    undefined field51_0x11c;
    undefined field52_0x11d;
    undefined field53_0x11e;
    undefined field54_0x11f;
    int64_t cur_rec_time_ms;
    char srt_file_name[128];
    _Bool b_srt_record_running;
    _Bool b_srt_switch_new_file;
    undefined field59_0x1aa;
    undefined field60_0x1ab;
    FILE *p_srt_file;
    struct duss_osal_task_handle_t *task_srt_record;
    undefined field63_0x1b4;
    undefined field64_0x1b5;
    undefined field65_0x1b6;
    undefined field66_0x1b7;
};

struct gs_media_cmd_chnl
{
    int chnl_fd;
    _Bool init;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
};

struct AVPanScan
{
    int id;
    int width;
    int height;
    int16_t position[3][2];
};

struct AVCodec
{
    char *name;
    char *long_name;
    enum AVMediaType type;
    enum AVCodecID id;
    int capabilities;
    struct AVRational *supported_framerates;
    enum AVPixelFormat *pix_fmts;
    int *supported_samplerates;
    enum AVSampleFormat *sample_fmts;
    uint64_t *channel_layouts;
    uint8_t max_lowres;
    undefined field11_0x29;
    undefined field12_0x2a;
    undefined field13_0x2b;
    struct AVClass *priv_class;
    struct AVProfile *profiles;
    int priv_data_size;
    struct AVCodec *next;
    int (*init_thread_copy)(struct AVCodecContext *);
    int (*update_thread_context)(struct AVCodecContext *, struct AVCodecContext *);
    struct AVCodecDefault *defaults;
    void (*init_static_data)(struct AVCodec *);
    int (*init)(struct AVCodecContext *);
    int (*encode_sub)(struct AVCodecContext *, uint8_t *, int, struct AVSubtitle *);
    int (*encode2)(struct AVCodecContext *, struct AVPacket *, struct AVFrame *, int *);
    int (*decode)(struct AVCodecContext *, void *, int *, struct AVPacket *);
    int (*close)(struct AVCodecContext *);
    void (*flush)(struct AVCodecContext *);
};

struct AVProfile
{
    int profile;
    char *name;
};

struct pl_muxer_itf_t
{
    int (*create)(p1_muxer_handle_t *, void *, void *);
    int (*destroy)(p1_muxer_handle_t);
    int (*prepare)(p1_muxer_handle_t);
    int (*release)(p1_muxer_handle_t);
    int (*add_stream)(p1_muxer_handle_t, enum AVCodecID, void *);
    int (*write)(p1_muxer_handle_t, void *, uint32_t, int);
    void *(*get_stream)(p1_muxer_handle_t, uint);
    int (*config_stream)(p1_muxer_handle_t, enum pl_muxer_config_index_t, void *);
};

struct AVFrame
{
    uint8_t *data[8];
    int linesize[8];
    uint8_t **extended_data;
    int width;
    int height;
    int nb_samples;
    int format;
    int key_frame;
    enum AVPictureType pict_type;
    uint8_t *base[8];
    struct AVRational sample_aspect_ratio;
    undefined field11_0x84;
    undefined field12_0x85;
    undefined field13_0x86;
    undefined field14_0x87;
    int64_t pts;
    int64_t pkt_pts;
    int64_t pkt_dts;
    int coded_picture_number;
    int display_picture_number;
    int quality;
    int reference;
    int8_t *qscale_table;
    int qstride;
    int qscale_type;
    uint8_t *mbskip_table;
    int16_t *motion_val[2];
    uint32_t *mb_type;
    short *dct_coeff;
    int8_t *ref_index[2];
    void *opaque;
    undefined field31_0xdc;
    undefined field32_0xdd;
    undefined field33_0xde;
    undefined field34_0xdf;
    uint64_t error[8];
    int type;
    int repeat_pict;
    int interlaced_frame;
    int top_field_first;
    int palette_has_changed;
    int buffer_hints;
    struct AVPanScan *pan_scan;
    undefined field43_0x13c;
    undefined field44_0x13d;
    undefined field45_0x13e;
    undefined field46_0x13f;
    int64_t reordered_opaque;
    void *hwaccel_picture_private;
    struct AVCodecContext *owner;
    void *thread_opaque;
    uint8_t motion_subsample_log2;
    undefined field52_0x155;
    undefined field53_0x156;
    undefined field54_0x157;
    int sample_rate;
    undefined field56_0x15c;
    undefined field57_0x15d;
    undefined field58_0x15e;
    undefined field59_0x15f;
    uint64_t channel_layout;
    struct AVBufferRef *buf[8];
    struct AVBufferRef **extended_buf;
    int nb_extended_buf;
    struct AVFrameSideData **side_data;
    int nb_side_data;
    int flags;
    enum AVColorRange color_range;
    enum AVColorPrimaries color_primaries;
    enum AVColorTransferCharacteristic color_trc;
    enum AVColorSpace colorspace;
    enum AVChromaLocation chroma_location;
    int64_t best_effort_timestamp;
    int64_t pkt_pos;
    int64_t pkt_duration;
    struct AVDictionary *metadata;
    int decode_error_flags;
    int channels;
    int pkt_size;
    struct AVBufferRef *qp_table_buf;
    undefined field80_0x1dc;
    undefined field81_0x1dd;
    undefined field82_0x1de;
    undefined field83_0x1df;
};

typedef struct gs_lv_transcode gs_lv_transcode_t;

typedef struct anon_struct_conflict1d6ff3 anon_struct_conflict1d6ff3;

typedef struct duss_osal_sema_attrib_t duss_osal_sema_attrib_t;

struct duss_osal_sema_attrib_t
{
    char *name;
    int32_t init_cnt;
};

struct anon_struct_conflict1d6ff3
{
    struct duss_osal_sema_attrib_t attrib;
    struct sem_t sema;
};

typedef struct anon_struct_conflict5d6 anon_struct_conflict5d6;

struct anon_struct_conflict5d6
{
    struct duss_osal_task_attrib_t attrib;
    pthread_t thread;
};

typedef struct anon_struct_conflict674 anon_struct_conflict674;

typedef struct duss_osal_timer_attrib_t duss_osal_timer_attrib_t;

typedef struct timespec timespec;

typedef void (*duss_osal_timer_entry_t)(void *);

typedef __kernel_long_t __kernel_time_t;

struct duss_osal_timer_attrib_t
{
    char *name;
    duss_osal_timer_entry_t entry;
    void *param;
    uint32_t timeout_us;
    int32_t repeat_times;
    enum duss_osal_priority_t priority;
};

struct timespec
{
    __kernel_time_t tv_sec;
    long tv_nsec;
};

struct anon_struct_conflict674
{
    struct duss_osal_timer_attrib_t attrib;
    pthread_t thread;
    int32_t repeat_cnt;
    _Bool suspend;
    _Bool restart;
    undefined field5_0x22;
    undefined field6_0x23;
    struct sem_t sema;
    struct sem_t lock;
    struct timespec saved_time;
};

typedef struct anon_struct_conflict70e anon_struct_conflict70e;

struct anon_struct_conflict70e
{
    struct duss_osal_mutex_attrib_t attrib;
    struct sem_t sema;
};

typedef struct anon_struct_conflict767 anon_struct_conflict767;

typedef struct duss_osal_event_attrib_t duss_osal_event_attrib_t;


struct pthread_mutex_t
{
    int32_t __private[1];
};

struct pthread_cond_t
{
    int32_t __private[1];
};

struct duss_osal_event_attrib_t
{
    char *name;
};

struct anon_struct_conflict767
{
    struct duss_osal_event_attrib_t attrib;
    struct pthread_mutex_t mutex;
    struct pthread_cond_t cond;
    uint32_t data;
    int32_t flag;
};

typedef struct anon_struct_conflict7f4 anon_struct_conflict7f4;

typedef struct duss_osal_msgq_attrib_t duss_osal_msgq_attrib_t;

struct duss_osal_msgq_attrib_t
{
    char *name;
    uint32_t buf_size;
};

struct anon_struct_conflict7f4
{
    struct duss_osal_msgq_attrib_t attrib;
    struct pthread_mutex_t r_mutex;
    struct pthread_mutex_t s_mutex;
    struct pthread_cond_t r_cond;
    struct pthread_cond_t s_cond;
    uint32_t buf_size;
    uint32_t head;
    uint32_t tail;
    uint8_t *buffer;
};

typedef struct duss_osal_event_handle_t duss_osal_event_handle_t;

struct duss_osal_event_handle_t
{
    struct duss_osal_event_attrib_t attrib;
    struct pthread_mutex_t mutex;
    struct pthread_cond_t cond;
    uint32_t data;
    int32_t flag;
};

typedef enum duss_osal_event_mode_t
{
    DUSS_OSAL_EVENT_MATCHALL = 1,
    DUSS_OSAL_EVENT_AUTOCLEAR = 2
} duss_osal_event_mode_t;

typedef struct duss_osal_msgq_handle_t duss_osal_msgq_handle_t;

struct duss_osal_msgq_handle_t
{
    struct duss_osal_msgq_attrib_t attrib;
    struct pthread_mutex_t r_mutex;
    struct pthread_mutex_t s_mutex;
    struct pthread_cond_t r_cond;
    struct pthread_cond_t s_cond;
    uint32_t buf_size;
    uint32_t head;
    uint32_t tail;
    uint8_t *buffer;
};

typedef struct duss_osal_sema_handle_t duss_osal_sema_handle_t;

struct duss_osal_sema_handle_t
{
    struct duss_osal_sema_attrib_t attrib;
    struct sem_t sema;
};

typedef struct duss_osal_timer_handle_t duss_osal_timer_handle_t;

struct duss_osal_timer_handle_t
{
    struct duss_osal_timer_attrib_t attrib;
    pthread_t thread;
    int32_t repeat_cnt;
    _Bool suspend;
    _Bool restart;
    undefined field5_0x22;
    undefined field6_0x23;
    struct sem_t sema;
    struct sem_t lock;
    struct timespec saved_time;
};
